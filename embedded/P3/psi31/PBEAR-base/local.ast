typedef unsigned char __CPROVER_bool;
typedef unsigned int __CPROVER_size_t;
typedef unsigned int size_t;
typedef unsigned int time_t;
typedef unsigned short int wchar_t;
typedef enum FSM State;
void _iv_() {__iv__current_func_call = 0;
initialize();
!(1 != 0);
(signed int)machineState == 0;
(signed int)machineState == 1;
(signed int)machineState == 2;
(signed int)machineState == 3;
(signed int)machineState == 4;
(signed int)machineState == 5;
(signed int)machineState == 7;
(signed int)machineState == 6;
(signed int)machineState == 8;
(signed int)machineState == 9;
__iv__current_func_call = 1;
machineState=standingBy();
__iv__current_func_call = 2;
machineState=primaryScan();
__iv__current_func_call = 3;
machineState=secondaryScan();
__iv__current_func_call = 4;
machineState=onPatrol();
__iv__current_func_call = 5;
machineState=longRangeApproach();
__iv__current_func_call = 6;
machineState=closeRangeApproach();
__iv__current_func_call = 7;
machineState=acquireTarget();
__iv__current_func_call = 8;
machineState=findAWall();
__iv__current_func_call = 9;
machineState=disposeOfTarget();
__iv__current_func_call = 10;
machineState=taskComplete();
__iv__current_func_call = 11;
update_prop_automata();
__iv__current_func_call = 12;
check_property();
__CPROVER_assume(FALSE);
return __VERIFIER_nondet_signed_int();
IRMax = 0;
sonarMax = 0;
__iv__current_func_call = 80;
clearTimer(0);
signed int return_value_time1;
__iv__current_func_call = 81;
return_value_time1=time1(0);
return_value_time1 >= 4000;
signed int return_value_SensorValue;
__iv__current_func_call = 82;
return_value_SensorValue=SensorValue(2);
IRMax >= return_value_SensorValue;
__iv__current_func_call = 83;
IRMax=SensorValue(2);
signed int return_value_SensorValue_0;
__iv__current_func_call = 84;
return_value_SensorValue_0=SensorValue(2);
return_value_SensorValue_0 >= ambientIR;
__iv__current_func_call = 85;
ambientIR=SensorValue(2);
motor[(signed long int)0] = (float)-(30.0 * 1.3);
motor[(signed long int)1] = 30.0f;
!(1 != 0);
__CPROVER_assume(FALSE);
__iv__current_func_call = 86;
clearTimer(0);
signed int return_value_time1_0;
__iv__current_func_call = 87;
return_value_time1_0=time1(0);
return_value_time1_0 >= 4000;
signed int return_value_SensorValue_1;
__iv__current_func_call = 88;
return_value_SensorValue_1=SensorValue(2);
ambientIR + 50 >= return_value_SensorValue_1;
__iv__current_func_call = 89;
stopWheels();
return (State)4;
motor[(signed long int)0] = (float)-(25.0 * 1.3);
motor[(signed long int)1] = 25.0f;
brobot_signal_loss = brobot_signal_loss + 1;
__CPROVER_assume(brobot_signal_loss <= brobot_max_loss);
!(1 != 0);
__CPROVER_assume(FALSE);
__iv__current_func_call = 91;
stopWheels();
return (State)3;
__iv__current_func_call = 58;
backUp();
__iv__current_func_call = 59;
turnAround();
signed int return_value_medianFilter;
signed int return_value_medianFilter_0;
signed int return_value_medianFilter_1;
__iv__current_func_call = 60;
return_value_medianFilter=medianFilter();
!(return_value_medianFilter >= 141);
motor[(signed long int)0] = (float)(40.0 * 1.3);
motor[(signed long int)1] = 40.0f;
signed int return_value_SensorValue;
__iv__current_func_call = 61;
return_value_SensorValue=SensorValue(4);
return_value_SensorValue == 0;
motor[(signed long int)0] = (float)-(25.0 * 1.3);
motor[(signed long int)1] = (float)-25;
__iv__current_func_call = 62;
wait1Msec(400);
__iv__current_func_call = 63;
return_value_medianFilter_0=medianFilter();
!(return_value_medianFilter_0 >= 141);
motor[(signed long int)0] = (float)-(20.0 * 1.3);
motor[(signed long int)1] = 20.0f;
1 != 0;
__CPROVER_assume(!(1 != 0));
signed int return_value_SensorValue_0;
__iv__current_func_call = 64;
return_value_SensorValue_0=SensorValue(5);
return_value_SensorValue_0 == 0;
motor[(signed long int)0] = (float)-(25.0 * 1.3);
motor[(signed long int)1] = (float)-25;
__iv__current_func_call = 65;
wait1Msec(400);
__iv__current_func_call = 66;
return_value_medianFilter_1=medianFilter();
!(return_value_medianFilter_1 >= 141);
motor[(signed long int)0] = (float)(20.0 * 1.3);
motor[(signed long int)1] = (float)-20;
1 != 0;
__CPROVER_assume(!(1 != 0));
!(1 != 0);
__CPROVER_assume(FALSE);
__iv__current_func_call = 67;
stopWheels();
return (State)8;
signed int res;
signed int return_value___VERIFIER_nondet_unsigned_int;
return_value___VERIFIER_nondet_unsigned_int = __VERIFIER_nondet_signed_int();
res = return_value___VERIFIER_nondet_unsigned_int;
__CPROVER_assume(0 <= res && res <= 65535);
return res;
sonarMax = 0;
__iv__current_func_call = 70;
clearTimer(0);
signed int return_value_time1;
__iv__current_func_call = 71;
return_value_time1=time1(0);
return_value_time1 >= 6000;
signed int return_value_SensorValue;
__iv__current_func_call = 72;
return_value_SensorValue=SensorValue(1);
!(return_value_SensorValue >= sonarMax);
__iv__current_func_call = 73;
sonarMax=SensorValue(1);
motor[(signed long int)0] = (float)-(25.0 * 1.3);
motor[(signed long int)1] = 25.0f;
!(1 != 0);
__CPROVER_assume(FALSE);
__iv__current_func_call = 74;
clearTimer(0);
signed int return_value_SensorValue_0;
__iv__current_func_call = 75;
return_value_SensorValue_0=SensorValue(1);
!(sonarMax + -100 >= return_value_SensorValue_0);
motor[(signed long int)0] = (float)-(25.0 * 1.3);
motor[(signed long int)1] = 25.0f;
1 != 0;
__CPROVER_assume(!(1 != 0));
__iv__current_func_call = 76;
stopWheels();
motor[(signed long int)0] = (float)(40.0 * 1.3);
motor[(signed long int)1] = 40.0f;
__iv__current_func_call = 77;
wait1Msec(2500);
__iv__current_func_call = 78;
stopWheels();
return (State)1;
signed int return_value_medianFilter;
__iv__current_func_call = 47;
return_value_medianFilter=medianFilter();
signed int return_value_medianFilter_0;
signed int return_value_SensorValue;
signed int return_value_SensorValue_1;
return_value_medianFilter >= 601;
return (State)5;
brobot_signal_loss = brobot_signal_loss + 1;
__CPROVER_assume(brobot_signal_loss <= brobot_max_loss);
__iv__current_func_call = 49;
return_value_medianFilter_0=medianFilter();
!(return_value_medianFilter_0 >= 601);
__iv__current_func_call = 50;
return_value_SensorValue=SensorValue(2);
ambientIR + 50 >= return_value_SensorValue;
motor[(signed long int)0] = (float)(40.0 * 1.3);
motor[(signed long int)1] = 40.0f;
brobot_signal_loss = brobot_signal_loss + 1;
__CPROVER_assume(brobot_signal_loss <= brobot_max_loss);
signed int return_value_SensorValue_0;
__iv__current_func_call = 52;
return_value_SensorValue_0=SensorValue(4);
__CPROVER_bool tmp_if_expr;
return_value_SensorValue_0 == 0;
tmp_if_expr = 1 != 0;
__iv__current_func_call = 53;
return_value_SensorValue_1=SensorValue(5);
tmp_if_expr = (return_value_SensorValue_1 != 0 ? 1 : (signed int)(0 != 0)) != 0;
!tmp_if_expr;
__iv__current_func_call = 54;
backUp();
__iv__current_func_call = 55;
stopWheels();
return (State)2;
!(1 != 0);
__CPROVER_assume(FALSE);
return (State)2;
signed int return_value_medianFilter;
signed int return_value_SensorValue;
signed int return_value_SensorValue_1;
__iv__current_func_call = 40;
return_value_medianFilter=medianFilter();
!(return_value_medianFilter >= 141);
__iv__current_func_call = 41;
return_value_SensorValue=SensorValue(2);
ambientIR + 20 >= return_value_SensorValue;
motor[(signed long int)0] = (float)(20.0 * 1.3);
motor[(signed long int)1] = 20.0f;
brobot_signal_loss = brobot_signal_loss + 1;
__CPROVER_assume(brobot_signal_loss <= brobot_max_loss);
signed int return_value_SensorValue_0;
__iv__current_func_call = 43;
return_value_SensorValue_0=SensorValue(4);
__CPROVER_bool tmp_if_expr;
return_value_SensorValue_0 == 0;
tmp_if_expr = 1 != 0;
__iv__current_func_call = 44;
return_value_SensorValue_1=SensorValue(5);
tmp_if_expr = (return_value_SensorValue_1 != 0 ? 1 : (signed int)(0 != 0)) != 0;
!tmp_if_expr;
__iv__current_func_call = 45;
backUp();
__iv__current_func_call = 46;
stopWheels();
return (State)2;
!(1 != 0);
__CPROVER_assume(FALSE);
return (State)7;
signed int first;
first = 0;
signed int second;
second = 0;
signed int third;
third = 0;
__iv__current_func_call = 34;
first=SensorValue(1);
__iv__current_func_call = 35;
wait1Msec(70);
__iv__current_func_call = 36;
second=SensorValue(1);
__iv__current_func_call = 37;
wait1Msec(70);
__iv__current_func_call = 38;
third=SensorValue(1);
__iv__current_func_call = 39;
wait1Msec(70);
!(first >= second && third >= first || second >= first && first >= third);
return first;
!(second >= first && third >= second || first >= second && second >= third);
return second;
return third;
IRMax = 0;
__iv__current_func_call = 16;
clearTimer(0);
signed int return_value_time1;
__iv__current_func_call = 17;
return_value_time1=time1(0);
return_value_time1 >= 3000;
signed int return_value_SensorValue;
__iv__current_func_call = 18;
return_value_SensorValue=SensorValue(2);
IRMax >= return_value_SensorValue;
__iv__current_func_call = 19;
IRMax=SensorValue(2);
motor[(signed long int)0] = (float)(25.0 * 1.3);
motor[(signed long int)1] = (float)-25;
!(1 != 0);
__CPROVER_assume(FALSE);
__iv__current_func_call = 20;
stopWheels();
__iv__current_func_call = 21;
wait1Msec(200);
__iv__current_func_call = 22;
clearTimer(0);
signed int return_value_time1_0;
__iv__current_func_call = 23;
return_value_time1_0=time1(0);
return_value_time1_0 >= 6000;
signed int return_value_SensorValue_0;
__iv__current_func_call = 24;
return_value_SensorValue_0=SensorValue(2);
!(return_value_SensorValue_0 >= IRMax);
__iv__current_func_call = 25;
IRMax=SensorValue(2);
motor[(signed long int)0] = (float)-(25.0 * 1.3);
motor[(signed long int)1] = 25.0f;
!(1 != 0);
__CPROVER_assume(FALSE);
__iv__current_func_call = 26;
stopWheels();
__iv__current_func_call = 27;
wait1Msec(200);
__iv__current_func_call = 28;
clearTimer(0);
signed int return_value_time1_1;
__iv__current_func_call = 29;
return_value_time1_1=time1(0);
return_value_time1_1 >= 6000;
signed int return_value_SensorValue_1;
__iv__current_func_call = 30;
return_value_SensorValue_1=SensorValue(2);
IRMax + -20 >= return_value_SensorValue_1;
__iv__current_func_call = 31;
stopWheels();
return (State)5;
motor[(signed long int)0] = (float)(25.0 * 1.3);
motor[(signed long int)1] = (float)-25;
brobot_signal_loss = brobot_signal_loss + 1;
__CPROVER_assume(brobot_signal_loss <= brobot_max_loss);
!(1 != 0);
__CPROVER_assume(FALSE);
__iv__current_func_call = 33;
stopWheels();
return (State)3;
__iv__current_func_call = 14;
stopWheels();
signed int return_value_SensorValue;
__iv__current_func_call = 15;
return_value_SensorValue=SensorValue(3);
return_value_SensorValue == 0;
return (State)1;
return (State)0;
reachedStates[(signed long int)machineState] = reachedStates[(signed long int)machineState] + 1;
isAllReached = 1;
signed int i;
i = 0;
i >= 10;
!(reachedStates[(signed long int)i] == 0);
isAllReached = 0;
i = i + 1;
__CPROVER_assume(FALSE);
__iv__current_func_call = 109;
stopWheels();
motor[(signed long int)0] = (float)-(30.0 * 1.3);
motor[(signed long int)1] = 30.0f;
__iv__current_func_call = 110;
wait1Msec(1000);
__iv__current_func_call = 111;
stopWheels();
signed int res;
signed int return_value___VERIFIER_nondet_unsigned_int;
return_value___VERIFIER_nondet_unsigned_int = __VERIFIER_nondet_signed_int();
res = return_value___VERIFIER_nondet_unsigned_int;
__CPROVER_assume(0 <= res && res <= 65535);
return res;
__iv__current_func_call = 104;
stopWheels();
__iv__current_func_call = 105;
backUp();
signed int i;
i = 0;
i >= 3;
motor[(signed long int)2] = 30.0f;
__iv__current_func_call = 106;
wait1Msec(2000);
motor[(signed long int)2] = (float)-30;
__iv__current_func_call = 107;
wait1Msec(1000);
__iv__current_func_call = 108;
turnAround();
i = i + 1;
__CPROVER_assume(FALSE);
return (State)0;
float tmp_assign;
tmp_assign = 0.0f;
motor[(signed long int)1] = tmp_assign;
motor[(signed long int)0] = tmp_assign;
__iv__current_func_call = 94;
stopWheels();
motor[(signed long int)2] = (float)-20;
__iv__current_func_call = 95;
wait1Msec(1500);
motor[(signed long int)2] = 0.0f;
motor[(signed long int)3] = (float)-10;
__iv__current_func_call = 96;
wait1Msec(1000);
motor[(signed long int)3] = (float)-30;
__iv__current_func_call = 97;
wait1Msec(500);
motor[(signed long int)3] = (float)-10;
__iv__current_func_call = 98;
wait1Msec(200);
motor[(signed long int)2] = 30.0f;
__iv__current_func_call = 99;
wait1Msec(900);
motor[(signed long int)2] = 10.0f;
return (State)6;
motor[(signed long int)2] = (float)-10;
__iv__current_func_call = 68;
wait1Msec(800);
motor[(signed long int)3] = 20.0f;
__iv__current_func_call = 69;
wait1Msec(1200);
float tmp_assign;
tmp_assign = 0.0f;
motor[(signed long int)2] = tmp_assign;
motor[(signed long int)3] = tmp_assign;
return (State)9;
__iv__current_func_call = 100;
stopWheels();
__iv__current_func_call = 101;
wait1Msec(400);
motor[(signed long int)0] = (float)-(25.0 * 1.3);
motor[(signed long int)1] = (float)-25;
__iv__current_func_call = 102;
wait1Msec(1500);
__iv__current_func_call = 103;
stopWheels();
assert(!(isAllReached != 0));
brobot_max_loss = 5;

}