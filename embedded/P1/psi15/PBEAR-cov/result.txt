--src data/obj_follower/apps/p7/obj_follower.c --wd results/obj-follow/p7/acc --unwind 1000 --synth-only-acc --synth-dir results/obj-follow/acc/synth --synth-timeout 300 --synth-max-size 512 --synth-max-height 15 
code parsing time: 1.023 sec

select target function calls:
getWidth(getArea__rectindex) (call id 16) influences 3 external nodes
internal node ratio: 1.68% (14 of 832)

getHeight(getArea__rectindex) (call id 17) influences 3 external nodes
internal node ratio: 1.68% (14 of 832)

getbiggestrect((U8)(0), -1) (call id 24) influences 4 external nodes
internal node ratio: 1.68% (14 of 832)

getArea((U8)(rectindex)) (call id 25) influences 3 external nodes
internal node ratio: 6.01% (50 of 832)

fisqrt(area) (call id 27) influences 3 external nodes
internal node ratio: 10.34% (86 of 832)

getArea((U8)(i)) (call id 15) influences 4 external nodes
internal node ratio: 2.04% (17 of 832)

find the best target combination:
predict complexity: (unwind 1000)
criterion unwind: 32
getbiggestrect((U8)(0), -1): original cmplx: 160, stub cmplx: 19
fisqrt(area): original cmplx: 33, stub cmplx: 4
getArea((U8)(rectindex)): original cmplx: 2, stub cmplx: 0
getWidth(getArea__rectindex): original cmplx: 1, stub cmplx: 0
getHeight(getArea__rectindex): original cmplx: 1, stub cmplx: 0
total cmplx: 384867

Jul 21, 2023 2:03:04 AM iv_checker.select.TargetFunctionSelector printRank
INFO: 
1. getbiggestrect((U8)(0), -1); fisqrt(area);  fitness: 2.357
2. getbiggestrect((U8)(0), -1);  fitness: 2.302
3. getArea((U8)(rectindex)); fisqrt(area); getArea((U8)(i));  fitness: 1.907
4. getWidth(getArea__rectindex); getHeight(getArea__rectindex); fisqrt(area);  fitness: 1.562
5. getArea((U8)(rectindex)); getArea((U8)(i));  fitness: 1.525

call getbiggestrect((U8)(0), -1) (call id 24)
call fisqrt(area) (call id 27)
Iteration 0:
signed int __iv__getbiggestrect_stub(U8 pcolorid, signed int pminarea) {
	signed int __iv__return_expr_getbiggestrect;
	if(5==nxtcamdata[12]) __iv__return_expr_getbiggestrect = 2; else if(pcolorid==nxtcamdata[6]) if(nxtcamdata[22]>=nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[0]>=nxtcamdata[15]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[11]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[24]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(0>=nxtcamdata[4]) __iv__return_expr_getbiggestrect = nxtcamdata[40]; else if(nxtcamdata[2]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[0]>=nxtcamdata[14]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[18]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[32]>=nxtcamdata[30]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[23]>=nxtcamdata[20]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[0]>=nxtcamdata[5]) __iv__return_expr_getbiggestrect = nxtcamdata[5]; else if(pcolorid<nxtcamdata[3]) if(nxtcamdata[0]>=nxtcamdata[18]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[19]>=nxtcamdata[29]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = 1; else __iv__return_expr_getbiggestrect = 7; else if(pcolorid==nxtcamdata[21]) __iv__return_expr_getbiggestrect = 4; else if(nxtcamdata[27]==nxtcamdata[0]) __iv__return_expr_getbiggestrect = 0; else if(pcolorid==nxtcamdata[36]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = (-1); 
	__CPROVER_assume((-1 <= __iv__return_expr_getbiggestrect && __iv__return_expr_getbiggestrect <= 7));
	return __iv__return_expr_getbiggestrect;
}
complexity: 19
accuracy: 70.79%
coverage: 88.89%
# constraints: 40

signed int __iv__fisqrt_stub(signed int val) {
	signed int __iv__return_expr_fisqrt;
	if(90>=val) if(8>=val) __iv__return_expr_fisqrt = 2; else __iv__return_expr_fisqrt = 5; else if((90*val)>=44115) __iv__return_expr_fisqrt = 22; else if(val>=450) __iv__return_expr_fisqrt = 21; else __iv__return_expr_fisqrt = 16; 
	__CPROVER_assume(0 <= __iv__return_expr_fisqrt && __iv__return_expr_fisqrt <= 45977);
	return __iv__return_expr_fisqrt;
}
complexity: 4
accuracy: 28.62%
coverage: 21.74%
# constraints: 6

run cbmc: (unwind: 10, timeout: 86400 sec)
cbmc running time: 0.115 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 0.115 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 9.93 MB

call getbiggestrect((U8)(0), -1) (call id 24)
call fisqrt(area) (call id 27)
Iteration 0:
signed int __iv__getbiggestrect_stub(U8 pcolorid, signed int pminarea) {
	signed int __iv__return_expr_getbiggestrect;
	if(5==nxtcamdata[12]) __iv__return_expr_getbiggestrect = 2; else if(pcolorid==nxtcamdata[6]) if(nxtcamdata[22]>=nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[0]>=nxtcamdata[15]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[11]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[24]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(0>=nxtcamdata[4]) __iv__return_expr_getbiggestrect = nxtcamdata[40]; else if(nxtcamdata[2]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[0]>=nxtcamdata[14]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[18]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[32]>=nxtcamdata[30]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[23]>=nxtcamdata[20]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[0]>=nxtcamdata[5]) __iv__return_expr_getbiggestrect = nxtcamdata[5]; else if(pcolorid<nxtcamdata[3]) if(nxtcamdata[0]>=nxtcamdata[18]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[19]>=nxtcamdata[29]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = 1; else __iv__return_expr_getbiggestrect = 7; else if(pcolorid==nxtcamdata[21]) __iv__return_expr_getbiggestrect = 4; else if(nxtcamdata[27]==nxtcamdata[0]) __iv__return_expr_getbiggestrect = 0; else if(pcolorid==nxtcamdata[36]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = (-1); 
	__CPROVER_assume((-1 <= __iv__return_expr_getbiggestrect && __iv__return_expr_getbiggestrect <= 7));
	return __iv__return_expr_getbiggestrect;
}
complexity: 19
accuracy: 70.79%
coverage: 88.89%
# constraints: 40

signed int __iv__fisqrt_stub(signed int val) {
	signed int __iv__return_expr_fisqrt;
	if(90>=val) if(8>=val) __iv__return_expr_fisqrt = 2; else __iv__return_expr_fisqrt = 5; else if((90*val)>=44115) __iv__return_expr_fisqrt = 22; else if(val>=450) __iv__return_expr_fisqrt = 21; else __iv__return_expr_fisqrt = 16; 
	__CPROVER_assume(0 <= __iv__return_expr_fisqrt && __iv__return_expr_fisqrt <= 45977);
	return __iv__return_expr_fisqrt;
}
complexity: 4
accuracy: 28.62%
coverage: 21.74%
# constraints: 6

run cbmc: (unwind: 20, timeout: 86400 sec)
cbmc running time: 0.141 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 0.256 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 9.93 MB

call getbiggestrect((U8)(0), -1) (call id 24)
call fisqrt(area) (call id 27)
Iteration 0:
signed int __iv__getbiggestrect_stub(U8 pcolorid, signed int pminarea) {
	signed int __iv__return_expr_getbiggestrect;
	if(5==nxtcamdata[12]) __iv__return_expr_getbiggestrect = 2; else if(pcolorid==nxtcamdata[6]) if(nxtcamdata[22]>=nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[0]>=nxtcamdata[15]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[11]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[24]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(0>=nxtcamdata[4]) __iv__return_expr_getbiggestrect = nxtcamdata[40]; else if(nxtcamdata[2]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[0]>=nxtcamdata[14]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[18]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[32]>=nxtcamdata[30]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[23]>=nxtcamdata[20]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[0]>=nxtcamdata[5]) __iv__return_expr_getbiggestrect = nxtcamdata[5]; else if(pcolorid<nxtcamdata[3]) if(nxtcamdata[0]>=nxtcamdata[18]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[19]>=nxtcamdata[29]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = 1; else __iv__return_expr_getbiggestrect = 7; else if(pcolorid==nxtcamdata[21]) __iv__return_expr_getbiggestrect = 4; else if(nxtcamdata[27]==nxtcamdata[0]) __iv__return_expr_getbiggestrect = 0; else if(pcolorid==nxtcamdata[36]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = (-1); 
	__CPROVER_assume((-1 <= __iv__return_expr_getbiggestrect && __iv__return_expr_getbiggestrect <= 7));
	return __iv__return_expr_getbiggestrect;
}
complexity: 19
accuracy: 70.79%
coverage: 88.89%
# constraints: 40

signed int __iv__fisqrt_stub(signed int val) {
	signed int __iv__return_expr_fisqrt;
	if(90>=val) if(8>=val) __iv__return_expr_fisqrt = 2; else __iv__return_expr_fisqrt = 5; else if((90*val)>=44115) __iv__return_expr_fisqrt = 22; else if(val>=450) __iv__return_expr_fisqrt = 21; else __iv__return_expr_fisqrt = 16; 
	__CPROVER_assume(0 <= __iv__return_expr_fisqrt && __iv__return_expr_fisqrt <= 45977);
	return __iv__return_expr_fisqrt;
}
complexity: 4
accuracy: 28.62%
coverage: 21.74%
# constraints: 6

run cbmc: (unwind: 30, timeout: 86400 sec)
cbmc running time: 0.166 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 0.422 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 9.93 MB

call getbiggestrect((U8)(0), -1) (call id 24)
call fisqrt(area) (call id 27)
Iteration 0:
signed int __iv__getbiggestrect_stub(U8 pcolorid, signed int pminarea) {
	signed int __iv__return_expr_getbiggestrect;
	if(5==nxtcamdata[12]) __iv__return_expr_getbiggestrect = 2; else if(pcolorid==nxtcamdata[6]) if(nxtcamdata[22]>=nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[0]>=nxtcamdata[15]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[11]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[24]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(0>=nxtcamdata[4]) __iv__return_expr_getbiggestrect = nxtcamdata[40]; else if(nxtcamdata[2]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[0]>=nxtcamdata[14]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[18]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[32]>=nxtcamdata[30]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[23]>=nxtcamdata[20]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[0]>=nxtcamdata[5]) __iv__return_expr_getbiggestrect = nxtcamdata[5]; else if(pcolorid<nxtcamdata[3]) if(nxtcamdata[0]>=nxtcamdata[18]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[19]>=nxtcamdata[29]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = 1; else __iv__return_expr_getbiggestrect = 7; else if(pcolorid==nxtcamdata[21]) __iv__return_expr_getbiggestrect = 4; else if(nxtcamdata[27]==nxtcamdata[0]) __iv__return_expr_getbiggestrect = 0; else if(pcolorid==nxtcamdata[36]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = (-1); 
	__CPROVER_assume((-1 <= __iv__return_expr_getbiggestrect && __iv__return_expr_getbiggestrect <= 7));
	return __iv__return_expr_getbiggestrect;
}
complexity: 19
accuracy: 70.79%
coverage: 88.89%
# constraints: 40

signed int __iv__fisqrt_stub(signed int val) {
	signed int __iv__return_expr_fisqrt;
	if(90>=val) if(8>=val) __iv__return_expr_fisqrt = 2; else __iv__return_expr_fisqrt = 5; else if((90*val)>=44115) __iv__return_expr_fisqrt = 22; else if(val>=450) __iv__return_expr_fisqrt = 21; else __iv__return_expr_fisqrt = 16; 
	__CPROVER_assume(0 <= __iv__return_expr_fisqrt && __iv__return_expr_fisqrt <= 45977);
	return __iv__return_expr_fisqrt;
}
complexity: 4
accuracy: 28.62%
coverage: 21.74%
# constraints: 6

run cbmc: (unwind: 40, timeout: 86400 sec)
cbmc running time: 24.184 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 24.606 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4068.89 MB

call getbiggestrect((U8)(0), -1) (call id 24)
call fisqrt(area) (call id 27)
Iteration 0:
signed int __iv__getbiggestrect_stub(U8 pcolorid, signed int pminarea) {
	signed int __iv__return_expr_getbiggestrect;
	if(5==nxtcamdata[12]) __iv__return_expr_getbiggestrect = 2; else if(pcolorid==nxtcamdata[6]) if(nxtcamdata[22]>=nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[0]>=nxtcamdata[15]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[11]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[24]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(0>=nxtcamdata[4]) __iv__return_expr_getbiggestrect = nxtcamdata[40]; else if(nxtcamdata[2]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[0]>=nxtcamdata[14]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[18]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[32]>=nxtcamdata[30]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[23]>=nxtcamdata[20]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[0]>=nxtcamdata[5]) __iv__return_expr_getbiggestrect = nxtcamdata[5]; else if(pcolorid<nxtcamdata[3]) if(nxtcamdata[0]>=nxtcamdata[18]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[19]>=nxtcamdata[29]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = 1; else __iv__return_expr_getbiggestrect = 7; else if(pcolorid==nxtcamdata[21]) __iv__return_expr_getbiggestrect = 4; else if(nxtcamdata[27]==nxtcamdata[0]) __iv__return_expr_getbiggestrect = 0; else if(pcolorid==nxtcamdata[36]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = (-1); 
	__CPROVER_assume((-1 <= __iv__return_expr_getbiggestrect && __iv__return_expr_getbiggestrect <= 7));
	return __iv__return_expr_getbiggestrect;
}
complexity: 19
accuracy: 70.79%
coverage: 88.89%
# constraints: 40

signed int __iv__fisqrt_stub(signed int val) {
	signed int __iv__return_expr_fisqrt;
	if(90>=val) if(8>=val) __iv__return_expr_fisqrt = 2; else __iv__return_expr_fisqrt = 5; else if((90*val)>=44115) __iv__return_expr_fisqrt = 22; else if(val>=450) __iv__return_expr_fisqrt = 21; else __iv__return_expr_fisqrt = 16; 
	__CPROVER_assume(0 <= __iv__return_expr_fisqrt && __iv__return_expr_fisqrt <= 45977);
	return __iv__return_expr_fisqrt;
}
complexity: 4
accuracy: 28.62%
coverage: 21.74%
# constraints: 6

run cbmc: (unwind: 50, timeout: 86400 sec)
cbmc running time: 546.164 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 570.77 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 14669.01 MB

call getbiggestrect((U8)(0), -1) (call id 24)
call fisqrt(area) (call id 27)
Iteration 0:
signed int __iv__getbiggestrect_stub(U8 pcolorid, signed int pminarea) {
	signed int __iv__return_expr_getbiggestrect;
	if(5==nxtcamdata[12]) __iv__return_expr_getbiggestrect = 2; else if(pcolorid==nxtcamdata[6]) if(nxtcamdata[22]>=nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[0]>=nxtcamdata[15]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[11]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[24]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(0>=nxtcamdata[4]) __iv__return_expr_getbiggestrect = nxtcamdata[40]; else if(nxtcamdata[2]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[0]>=nxtcamdata[14]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[18]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[32]>=nxtcamdata[30]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[23]>=nxtcamdata[20]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[0]>=nxtcamdata[5]) __iv__return_expr_getbiggestrect = nxtcamdata[5]; else if(pcolorid<nxtcamdata[3]) if(nxtcamdata[0]>=nxtcamdata[18]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[19]>=nxtcamdata[29]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = 1; else __iv__return_expr_getbiggestrect = 7; else if(pcolorid==nxtcamdata[21]) __iv__return_expr_getbiggestrect = 4; else if(nxtcamdata[27]==nxtcamdata[0]) __iv__return_expr_getbiggestrect = 0; else if(pcolorid==nxtcamdata[36]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = (-1); 
	__CPROVER_assume((-1 <= __iv__return_expr_getbiggestrect && __iv__return_expr_getbiggestrect <= 7));
	return __iv__return_expr_getbiggestrect;
}
complexity: 19
accuracy: 70.79%
coverage: 88.89%
# constraints: 40

signed int __iv__fisqrt_stub(signed int val) {
	signed int __iv__return_expr_fisqrt;
	if(90>=val) if(8>=val) __iv__return_expr_fisqrt = 2; else __iv__return_expr_fisqrt = 5; else if((90*val)>=44115) __iv__return_expr_fisqrt = 22; else if(val>=450) __iv__return_expr_fisqrt = 21; else __iv__return_expr_fisqrt = 16; 
	__CPROVER_assume(0 <= __iv__return_expr_fisqrt && __iv__return_expr_fisqrt <= 45977);
	return __iv__return_expr_fisqrt;
}
complexity: 4
accuracy: 28.62%
coverage: 21.74%
# constraints: 6

run cbmc: (unwind: 60, timeout: 86400 sec)
cbmc running time: 882.445 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1453.215 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 23507.32 MB

call getbiggestrect((U8)(0), -1) (call id 24)
call fisqrt(area) (call id 27)
Iteration 0:
signed int __iv__getbiggestrect_stub(U8 pcolorid, signed int pminarea) {
	signed int __iv__return_expr_getbiggestrect;
	if(5==nxtcamdata[12]) __iv__return_expr_getbiggestrect = 2; else if(pcolorid==nxtcamdata[6]) if(nxtcamdata[22]>=nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[0]>=nxtcamdata[15]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[11]) __iv__return_expr_getbiggestrect = 5; else if(nxtcamdata[24]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 5; else if(0>=nxtcamdata[4]) __iv__return_expr_getbiggestrect = nxtcamdata[40]; else if(nxtcamdata[2]==nxtcamdata[10]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[0]>=nxtcamdata[14]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[19]==nxtcamdata[18]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[32]>=nxtcamdata[30]) __iv__return_expr_getbiggestrect = 6; else if(nxtcamdata[23]>=nxtcamdata[20]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[0]>=nxtcamdata[5]) __iv__return_expr_getbiggestrect = nxtcamdata[5]; else if(pcolorid<nxtcamdata[3]) if(nxtcamdata[0]>=nxtcamdata[18]) __iv__return_expr_getbiggestrect = 7; else if(nxtcamdata[19]>=nxtcamdata[29]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = 1; else __iv__return_expr_getbiggestrect = 7; else if(pcolorid==nxtcamdata[21]) __iv__return_expr_getbiggestrect = 4; else if(nxtcamdata[27]==nxtcamdata[0]) __iv__return_expr_getbiggestrect = 0; else if(pcolorid==nxtcamdata[36]) __iv__return_expr_getbiggestrect = 7; else __iv__return_expr_getbiggestrect = (-1); 
	__CPROVER_assume((-1 <= __iv__return_expr_getbiggestrect && __iv__return_expr_getbiggestrect <= 7));
	return __iv__return_expr_getbiggestrect;
}
complexity: 19
accuracy: 70.79%
coverage: 88.89%
# constraints: 40

signed int __iv__fisqrt_stub(signed int val) {
	signed int __iv__return_expr_fisqrt;
	if(90>=val) if(8>=val) __iv__return_expr_fisqrt = 2; else __iv__return_expr_fisqrt = 5; else if((90*val)>=44115) __iv__return_expr_fisqrt = 22; else if(val>=450) __iv__return_expr_fisqrt = 21; else __iv__return_expr_fisqrt = 16; 
	__CPROVER_assume(0 <= __iv__return_expr_fisqrt && __iv__return_expr_fisqrt <= 45977);
	return __iv__return_expr_fisqrt;
}
complexity: 4
accuracy: 28.62%
coverage: 21.74%
# constraints: 6

run cbmc: (unwind: 70, timeout: 86400 sec)
cbmc running time: 3618.979 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 70): 15.927 sec
property 'assert((state != 2));' is TRUE alarm.
true alarm finding time: 16.677 sec


total CBMC running time: 5072.194 sec
total true alarm finding time: 16.677 sec
total refinement time: 0.0 sec
peak memory usage: 32654.45 MB