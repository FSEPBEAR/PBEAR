--src data/elev/src/p1/elev.c --wd results/elevator/p1/acc --unwind 1000 --object-bits 14 --synth-only-acc --synth-dir results/elevator/acc/synth --synth-timeout 600 --synth-max-size 512 --synth-max-height 15 
code parsing time: 0.84 sec

select target function calls:
elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49) influences 5 external nodes
internal node ratio: 0.85% (6 of 709)

floorIsOrdered(previousMainFloor, motorDirection) (call id 20) influences 13 external nodes
internal node ratio: 19.32% (137 of 709)

isButtonPressed() (call id 11) influences 7 external nodes
internal node ratio: 2.96% (21 of 709)

floorIsOrdered(previousMainFloor, motorDirection) (call id 14) influences 13 external nodes
internal node ratio: 12.69% (90 of 709)

find the best target combination:
predict complexity: (unwind 1000)
criterion unwind: 8
elev_get_button_signal((elev_button_type_t)(button), floorNum): original cmplx: 1, stub cmplx: 0
floorIsOrdered(previousMainFloor, motorDirection): original cmplx: 157, stub cmplx: 22
isButtonPressed(): original cmplx: 136, stub cmplx: 9
total cmplx: 8198

Jul 21, 2023 11:14:13 AM iv_checker.select.TargetFunctionSelector printRank
INFO: 
1. elev_get_button_signal((elev_button_type_t)(button), floorNum); floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed(); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 2.966
2. elev_get_button_signal((elev_button_type_t)(button), floorNum); floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 2.330
3. floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed(); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 1.909
4. elev_get_button_signal((elev_button_type_t)(button), floorNum); isButtonPressed();  fitness: 1.635
5. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 1.038

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 10, timeout: 86400 sec)
cbmc running time: 1.845 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1.845 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 142.81 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 20, timeout: 86400 sec)
cbmc running time: 4.32 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6.165 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 289.98 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 30, timeout: 86400 sec)
cbmc running time: 7.642 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 13.807 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 462.77 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 40, timeout: 86400 sec)
cbmc running time: 11.261 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 25.068 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 620.17 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 50, timeout: 86400 sec)
cbmc running time: 13.701 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 38.769 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 793.72 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 60, timeout: 86400 sec)
cbmc running time: 16.525 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 55.294 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 984.29 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 70, timeout: 86400 sec)
cbmc running time: 20.034 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 75.328 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1077.44 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 80, timeout: 86400 sec)
cbmc running time: 23.684 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 99.012 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1238.59 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 90, timeout: 86400 sec)
cbmc running time: 26.671 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 125.683 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1513.66 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 100, timeout: 86400 sec)
cbmc running time: 34.447 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 160.13 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1550.90 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 110, timeout: 86400 sec)
cbmc running time: 34.223 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 194.353 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1756.73 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 120, timeout: 86400 sec)
cbmc running time: 35.889 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 230.242 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1870.13 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 130, timeout: 86400 sec)
cbmc running time: 45.869 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 276.111 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2055.15 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 140, timeout: 86400 sec)
cbmc running time: 44.165 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 320.276 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2355.88 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 150, timeout: 86400 sec)
cbmc running time: 48.394 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 368.67 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2355.88 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 160, timeout: 86400 sec)
cbmc running time: 45.738 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 414.408 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2674.84 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 170, timeout: 86400 sec)
cbmc running time: 53.234 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 467.642 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2853.57 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 180, timeout: 86400 sec)
cbmc running time: 54.442 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 522.084 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2945.07 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 190, timeout: 86400 sec)
cbmc running time: 55.742 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 577.826 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3227.47 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 200, timeout: 86400 sec)
cbmc running time: 83.286 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 661.112 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3287.41 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 210, timeout: 86400 sec)
cbmc running time: 72.656 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 733.768 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3290.68 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 220, timeout: 86400 sec)
cbmc running time: 86.411 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 820.179 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3694.21 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 230, timeout: 86400 sec)
cbmc running time: 82.953 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 903.132 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3754.55 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 240, timeout: 86400 sec)
cbmc running time: 77.65 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 980.782 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4059.84 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 250, timeout: 86400 sec)
cbmc running time: 109.061 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1089.843 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4075.98 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 260, timeout: 86400 sec)
cbmc running time: 109.643 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1199.486 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4398.46 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 270, timeout: 86400 sec)
cbmc running time: 97.763 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1297.249 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4490.64 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 280, timeout: 86400 sec)
cbmc running time: 107.617 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1404.866 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4682.96 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 290, timeout: 86400 sec)
cbmc running time: 117.42 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1522.286 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4829.29 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 300, timeout: 86400 sec)
cbmc running time: 117.414 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1639.7 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5099.27 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 127.361 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1767.061 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5268.15 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 320, timeout: 86400 sec)
cbmc running time: 123.472 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1890.533 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5429.97 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 330, timeout: 86400 sec)
cbmc running time: 126.581 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2017.114 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5585.66 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 340, timeout: 86400 sec)
cbmc running time: 160.542 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2177.656 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5627.48 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 350, timeout: 86400 sec)
cbmc running time: 152.648 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2330.304 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5913.09 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 360, timeout: 86400 sec)
cbmc running time: 166.474 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2496.778 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6120.73 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 370, timeout: 86400 sec)
cbmc running time: 156.251 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2653.029 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6287.50 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 380, timeout: 86400 sec)
cbmc running time: 221.909 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2874.938 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6408.86 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 390, timeout: 86400 sec)
cbmc running time: 184.757 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3059.695 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6620.86 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 400, timeout: 86400 sec)
cbmc running time: 168.68 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3228.375 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6796.75 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 410, timeout: 86400 sec)
cbmc running time: 242.675 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3471.05 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6955.09 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 420, timeout: 86400 sec)
cbmc running time: 214.73 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3685.78 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7212.65 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 430, timeout: 86400 sec)
cbmc running time: 178.111 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3863.891 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7384.93 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 440, timeout: 86400 sec)
cbmc running time: 205.304 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4069.195 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7460.62 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 450, timeout: 86400 sec)
cbmc running time: 209.454 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4278.649 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7712.55 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 460, timeout: 86400 sec)
cbmc running time: 211.793 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4490.442 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7805.05 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 470, timeout: 86400 sec)
cbmc running time: 251.928 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4742.37 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7967.49 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 480, timeout: 86400 sec)
cbmc running time: 278.711 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5021.081 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8154.78 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 490, timeout: 86400 sec)
cbmc running time: 315.077 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5336.158 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8391.18 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 500, timeout: 86400 sec)
cbmc running time: 281.835 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5617.993 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8520.69 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 510, timeout: 86400 sec)
cbmc running time: 286.267 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5904.26 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8752.21 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 520, timeout: 86400 sec)
cbmc running time: 250.439 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6154.699 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8921.08 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 530, timeout: 86400 sec)
cbmc running time: 251.907 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6406.606 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 9089.36 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 540, timeout: 86400 sec)
cbmc running time: 511.168 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6917.774 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10194.05 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 550, timeout: 86400 sec)
cbmc running time: 398.327 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 7316.101 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10194.05 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 560, timeout: 86400 sec)
cbmc running time: 402.578 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 7718.679 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10194.05 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 570, timeout: 86400 sec)
cbmc running time: 343.42 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 8062.099 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10194.05 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 580, timeout: 86400 sec)
cbmc running time: 324.81 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 8386.909 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10194.05 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 590, timeout: 86400 sec)
cbmc running time: 388.976 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 8775.885 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10194.05 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 600, timeout: 86400 sec)
cbmc running time: 391.748 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 9167.633 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10445.89 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 915.46 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 5.157 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.692 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 6.821 sec

Iteration 1:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(1==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 26
# constraints: 41

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][1]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][0]==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][1]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][3]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 14
# constraints: 29

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 888.038 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 7.474 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 9.111 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 15.295 sec

Iteration 2:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)==motorDir) if(orderMatrix[1][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = floorNum; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 24
# constraints: 47

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][1]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][0]==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][1]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][3]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 14
# constraints: 29

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 742.822 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.64 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.782 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 21.139 sec

Iteration 3:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) if(orderMatrix[2][3]==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 29
# constraints: 52

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][0]>=orderMatrix[1][1]) if(orderMatrix[2][1]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 17
# constraints: 30

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 915.107 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 8.253 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 9.817 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 36.241 sec

Iteration 4:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(motorDir<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 46
# constraints: 60

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][0]>=orderMatrix[1][1]) if(orderMatrix[2][1]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 17
# constraints: 30

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 913.177 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.843 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.905 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 37.006 sec

Iteration 5:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]==orderMatrix[1][2]) if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 51
# constraints: 65

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][0]>=orderMatrix[1][1]) if(orderMatrix[2][1]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 17
# constraints: 30

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1313.259 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.846 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.006 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 43.134 sec

Iteration 6:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=orderMatrix[0][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]>=orderMatrix[2][2]) if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]==orderMatrix[0][0]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]>=orderMatrix[2][2]) if(orderMatrix[1][0]>=orderMatrix[0][1]) if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(0==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(0==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]>=orderMatrix[2][2]) if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 54
# constraints: 70

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(0==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 17
# constraints: 31

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1348.433 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.679 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.815 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 55.142 sec

Iteration 7:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(0==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 56
# constraints: 73

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][1]>=5) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(0==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][0]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 23
# constraints: 35

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1568.565 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.877 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.035 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 64.388 sec

Iteration 8:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]==orderMatrix[0][2]) if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = floorNum; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 50
# constraints: 80

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][3]==orderMatrix[1][1]) if(0==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 23
# constraints: 36

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1281.695 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.602 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.761 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 71.733 sec

Iteration 9:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]>=orderMatrix[0][1]) if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][1]>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 54
# constraints: 85

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]>=5) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][0]>=orderMatrix[2][3]) if(0==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 26
# constraints: 40

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 993.822 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.797 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.887 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 66.983 sec

Iteration 10:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[2][0]) if(orderMatrix[0][2]>=orderMatrix[1][3]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[2][2]) if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]>=orderMatrix[1][3]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]>=orderMatrix[0][0]) if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[0][3]) if(orderMatrix[2][3]==orderMatrix[2][2]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 54
# constraints: 88

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[1][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 17
# constraints: 41

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1469.36 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 5.141 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.434 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 85.826 sec

Iteration 11:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[0][2]>=motorDir) if(orderMatrix[0][3]>=orderMatrix[1][2]) if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]>=motorDir) if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]>=motorDir) if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(motorDir==floorNum) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 67
# constraints: 97

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[1][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 17
# constraints: 41

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1397.364 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 5.62 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.749 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 91.05 sec

Iteration 12:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = floorNum; else if(0==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(0==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 66
# constraints: 99

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[1][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 17
# constraints: 41

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1706.848 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.952 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.035 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 96.143 sec

Iteration 13:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[1][2]) if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[0][3]) if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 61
# constraints: 101

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][2]>=orderMatrix[1][2]) if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][0]>=orderMatrix[0][2]) if(orderMatrix[2][2]>=orderMatrix[0][1]) if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(0==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 26
# constraints: 42

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1530.183 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.78 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.849 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 102.092 sec

Iteration 14:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]>=orderMatrix[1][1]) if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[2][2]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]>=orderMatrix[1][1]) if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]>=orderMatrix[0][2]) if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]>=orderMatrix[1][1]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]==orderMatrix[2][0]) if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]>=orderMatrix[1][1]) if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(1==orderMatrix[1][0]) if(orderMatrix[1][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 70
# constraints: 103

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][2]>=orderMatrix[1][2]) if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][0]>=orderMatrix[0][2]) if(orderMatrix[2][2]>=orderMatrix[0][1]) if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(0==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 26
# constraints: 42

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1580.667 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.606 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.658 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 111.482 sec

Iteration 15:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(0==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(0==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 78
# constraints: 107

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][3]>=orderMatrix[2][0]) if(orderMatrix[0][0]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][1]==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 27
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1535.463 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.896 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.02 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 99.971 sec

Iteration 16:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[2][1]) if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]>=orderMatrix[2][0]) if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]>=orderMatrix[2][2]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]>=orderMatrix[2][1]) if(orderMatrix[1][1]>=orderMatrix[2][1]) if(orderMatrix[1][3]>=orderMatrix[2][1]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]>=orderMatrix[2][1]) if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]>=orderMatrix[2][1]) if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[1][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(1==orderMatrix[1][3]) if(orderMatrix[2][3]==orderMatrix[2][2]) if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]==orderMatrix[0][2]) if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 77
# constraints: 111

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][3]>=orderMatrix[2][0]) if(orderMatrix[0][0]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][1]==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 27
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1958.54 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.823 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.973 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 109.134 sec

Iteration 17:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]>=orderMatrix[2][1]) if(orderMatrix[1][3]>=orderMatrix[2][1]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]>=motorDir) if(orderMatrix[1][2]>=motorDir) if(orderMatrix[0][1]>=motorDir) if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][1]>=motorDir) if(orderMatrix[1][2]>=orderMatrix[2][1]) if(orderMatrix[0][0]>=motorDir) if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[1][1]>=orderMatrix[2][1]) if(orderMatrix[2][0]>=orderMatrix[2][1]) if(orderMatrix[0][0]>=orderMatrix[2][1]) if(orderMatrix[0][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]>=orderMatrix[2][2]) if(orderMatrix[2][3]>=orderMatrix[2][2]) if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 69
# constraints: 117

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][3]>=orderMatrix[2][0]) if(orderMatrix[0][0]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][1]==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 27
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1793.607 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.614 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.893 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 117.135 sec

Iteration 18:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[2][0]>=orderMatrix[0][0]) if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=orderMatrix[1][0]) if(orderMatrix[2][0]>=orderMatrix[1][1]) if(1==orderMatrix[2][0]) if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 76
# constraints: 124

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 27
# constraints: 47

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1790.286 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.903 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.041 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 119.563 sec

Iteration 19:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]>=orderMatrix[1][0]) if(orderMatrix[1][2]>=orderMatrix[0][0]) if(1==orderMatrix[0][1]) if(orderMatrix[0][3]>=orderMatrix[0][0]) if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][1]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 74
# constraints: 129

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]>=orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else __iv__return_expr_isButtonPressed = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 28
# constraints: 50

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1871.166 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.682 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.785 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 155.944 sec

Iteration 20:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) if(orderMatrix[0][2]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=orderMatrix[2][1]) if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(2==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][1]>=orderMatrix[2][1]) if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=orderMatrix[2][3]) if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]==orderMatrix[2][2]) if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[2][0]<floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][1]==motorDir) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][0]==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 77
# constraints: 130

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]>=orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else __iv__return_expr_isButtonPressed = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 28
# constraints: 50

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1863.353 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.68 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.944 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 156.874 sec

Iteration 21:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][1]>=orderMatrix[1][1]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]>=orderMatrix[1][1]) if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]>=orderMatrix[1][1]) if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(1==orderMatrix[1][3]) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]==orderMatrix[0][0]) if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]>=orderMatrix[1][1]) if(orderMatrix[2][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 82
# constraints: 138

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 24
# constraints: 52

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2121.889 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.976 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.05 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 174.429 sec

Iteration 22:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) if(orderMatrix[0][2]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]>=orderMatrix[0][3]) if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[0][2]>=orderMatrix[1][3]) if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]>=orderMatrix[0][3]) if(orderMatrix[2][3]>=orderMatrix[1][3]) if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(1==orderMatrix[2][3]) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]==orderMatrix[2][2]) if(orderMatrix[1][2]>=orderMatrix[0][1]) if(orderMatrix[1][2]>=motorDir) if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]>=motorDir) if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]>=motorDir) if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(1==orderMatrix[2][1]) if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]>=motorDir) if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 94
# constraints: 142

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(orderMatrix[2][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 19
# constraints: 53

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2051.245 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.889 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.086 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 189.6 sec

Iteration 23:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]>=orderMatrix[1][0]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(1==orderMatrix[0][3]) if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]>=orderMatrix[1][0]) if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]>=orderMatrix[1][0]) if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[1][0]) if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 95
# constraints: 152

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][0]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 25
# constraints: 54

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2254.249 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.994 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.137 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 188.41 sec

Iteration 24:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]>=5) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[0][2]>=orderMatrix[1][3]) if(orderMatrix[0][2]>=orderMatrix[2][3]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]==orderMatrix[0][2]) if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]>=orderMatrix[0][1]) if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 94
# constraints: 156

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][0]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 25
# constraints: 54

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2011.564 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.926 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.941 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 203.452 sec

Iteration 25:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]==orderMatrix[2][2]) if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 93
# constraints: 157

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][1]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]>=orderMatrix[1][3]) if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 28
# constraints: 56

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1710.974 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.388 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.415 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 242.25 sec

Iteration 26:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]>=orderMatrix[0][3]) if(orderMatrix[1][3]>=orderMatrix[1][0]) if(orderMatrix[1][3]>=orderMatrix[1][1]) if(orderMatrix[1][3]>=orderMatrix[2][1]) if(orderMatrix[1][3]>=orderMatrix[0][0]) if(orderMatrix[1][3]>=orderMatrix[2][2]) if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(1==orderMatrix[1][3]) if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]>=orderMatrix[1][1]) if(orderMatrix[1][2]>=orderMatrix[1][0]) if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]==orderMatrix[0][0]) if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 92
# constraints: 160

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][0]>=orderMatrix[1][1]) if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][2]>=orderMatrix[2][2]) if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 34
# constraints: 58

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2299.154 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.926 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.035 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 242.025 sec

Iteration 27:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]>=orderMatrix[0][3]) if(orderMatrix[1][3]>=motorDir) if(orderMatrix[2][2]>=motorDir) if(orderMatrix[1][3]>=orderMatrix[2][1]) if(orderMatrix[1][3]>=orderMatrix[0][0]) if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]>=orderMatrix[1][0]) if(1==orderMatrix[1][3]) if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]>=motorDir) if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][1]>=motorDir) if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]>=orderMatrix[1][1]) if(orderMatrix[1][2]>=orderMatrix[1][0]) if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[2][2]>=orderMatrix[1][0]) if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[0][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 93
# constraints: 164

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[1][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 33
# constraints: 59

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2120.282 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 5.019 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.077 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 214.428 sec

Iteration 28:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][1]>=5) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[1][1]) if(orderMatrix[0][2]>=orderMatrix[1][0]) if(orderMatrix[0][2]>=orderMatrix[0][3]) if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[0][2]>=orderMatrix[1][3]) if(orderMatrix[0][2]>=orderMatrix[2][0]) if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]>=orderMatrix[0][0]) if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=orderMatrix[1][3]) if(orderMatrix[2][3]>=orderMatrix[2][0]) if(orderMatrix[2][3]>=orderMatrix[1][0]) if(orderMatrix[2][3]>=orderMatrix[2][2]) if(orderMatrix[2][3]>=orderMatrix[1][2]) if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]==orderMatrix[0][2]) if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[0][1]) if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]>=orderMatrix[1][0]) if(orderMatrix[2][1]>=orderMatrix[0][0]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 96
# constraints: 166

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[1][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 33
# constraints: 59

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2052.94 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 7.318 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 8.718 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 207.442 sec

Iteration 29:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(2>=floorNum) if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][1]>=motorDir) if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[2][3]==orderMatrix[0][1]) if(orderMatrix[1][1]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 89
# constraints: 168

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]>=orderMatrix[0][0]) if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][1]>=orderMatrix[0][0]) if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 34
# constraints: 60

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2128.384 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.745 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.891 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 231.248 sec

Iteration 30:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]>=orderMatrix[0][1]) if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]>=orderMatrix[2][1]) if(orderMatrix[1][3]>=orderMatrix[2][1]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]>=orderMatrix[0][1]) if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]>=orderMatrix[2][2]) if(orderMatrix[1][3]>=orderMatrix[0][0]) if(orderMatrix[1][3]>=orderMatrix[1][0]) if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(1==orderMatrix[1][3]) if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]>=orderMatrix[1][0]) if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]>=orderMatrix[1][0]) if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[2][1]) if(orderMatrix[0][3]>=orderMatrix[2][2]) if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]>=orderMatrix[1][0]) if(orderMatrix[2][0]==orderMatrix[0][0]) if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]>=orderMatrix[1][0]) if(orderMatrix[1][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(2==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]>=floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 91
# constraints: 171

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]>=orderMatrix[0][0]) if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][1]>=orderMatrix[0][0]) if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 34
# constraints: 60

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2597.694 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 5.215 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.407 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 212.93 sec

Iteration 31:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]>=orderMatrix[2][0]) if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]>=orderMatrix[0][0]) if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]>=orderMatrix[2][0]) if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(1==orderMatrix[2][3]) if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]>=orderMatrix[1][2]) if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][3]>=orderMatrix[0][0]) if(1==orderMatrix[1][3]) if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]==orderMatrix[0][0]) if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 91
# constraints: 178

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]>=orderMatrix[0][0]) if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][1]>=orderMatrix[0][0]) if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 34
# constraints: 60

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2074.069 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.668 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.759 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 250.607 sec

Iteration 32:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]>=orderMatrix[0][1]) if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]>=orderMatrix[0][1]) if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(1==orderMatrix[2][3]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]>=orderMatrix[0][1]) if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(1==orderMatrix[1][3]) if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 93
# constraints: 183

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][0]>=orderMatrix[0][1]) if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 34
# constraints: 61

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2070.511 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.671 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.742 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 311.508 sec

Iteration 33:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(0==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=orderMatrix[2][1]) if(orderMatrix[1][2]>=orderMatrix[0][1]) if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]>=orderMatrix[2][0]) if(orderMatrix[0][0]>=orderMatrix[1][0]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(0==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]>=orderMatrix[2][1]) if(orderMatrix[1][3]>=orderMatrix[0][1]) if(1==orderMatrix[1][3]) if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[0][3]>=orderMatrix[2][0]) if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]>=orderMatrix[2][1]) if(orderMatrix[1][2]>=orderMatrix[1][0]) if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]>=motorDir) if(orderMatrix[1][1]>=orderMatrix[1][0]) if(orderMatrix[1][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(2==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]>=floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 95
# constraints: 187

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][2]>=orderMatrix[1][0]) if(orderMatrix[0][2]>=orderMatrix[2][1]) if(orderMatrix[0][2]>=orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 38
# constraints: 63

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 2619.538 sec

verification results: 
property 'assert((state != 2));' is TRUE alarm.

total CBMC running time: 66657.34 sec
total true alarm finding time: 207.45 sec
total refinement time: 4331.428 sec
peak memory usage: 18829.07 MB