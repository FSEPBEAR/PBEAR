--src data/elev/src/p1/elev.c --wd results/elevator/p1/no_alarm --unwind 1000 --object-bits 14 --no-alarm-filtering --synth-dir results/elevator/synth --synth-timeout 600 --synth-max-size 512 --synth-max-height 15 
code parsing time: 0.792 sec

select target function calls:
elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49) influences 5 external nodes
internal node ratio: 0.85% (6 of 709)

floorIsOrdered(previousMainFloor, motorDirection) (call id 20) influences 13 external nodes
internal node ratio: 19.32% (137 of 709)

isButtonPressed() (call id 11) influences 7 external nodes
internal node ratio: 2.96% (21 of 709)

floorIsOrdered(previousMainFloor, motorDirection) (call id 14) influences 13 external nodes
internal node ratio: 12.69% (90 of 709)

find the best target combination:
predict complexity: (unwind 1000)
criterion unwind: 8
elev_get_button_signal((elev_button_type_t)(button), floorNum): original cmplx: 1, stub cmplx: 0
floorIsOrdered(previousMainFloor, motorDirection): original cmplx: 157, stub cmplx: 3
isButtonPressed(): original cmplx: 136, stub cmplx: 3
total cmplx: 8198

Aug 01, 2023 1:35:32 PM iv_checker.select.TargetFunctionSelector printRank
INFO: 
1. elev_get_button_signal((elev_button_type_t)(button), floorNum); floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed(); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 5.959
2. elev_get_button_signal((elev_button_type_t)(button), floorNum); floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 5.367
3. floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed(); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 4.803
4. elev_get_button_signal((elev_button_type_t)(button), floorNum); isButtonPressed();  fitness: 4.592
5. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 4.107

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 10, timeout: 86400 sec)
cbmc running time: 1.528 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1.528 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 132.25 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 20, timeout: 86400 sec)
cbmc running time: 3.659 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5.187 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 252.74 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 30, timeout: 86400 sec)
cbmc running time: 7.149 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 12.336 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 428.01 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 40, timeout: 86400 sec)
cbmc running time: 10.347 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 22.683 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 523.82 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 50, timeout: 86400 sec)
cbmc running time: 12.958 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 35.641 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 647.06 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 60, timeout: 86400 sec)
cbmc running time: 15.235 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 50.876 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 803.91 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 70, timeout: 86400 sec)
cbmc running time: 17.88 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 68.756 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 943.55 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 80, timeout: 86400 sec)
cbmc running time: 23.928 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 92.684 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1104.80 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 90, timeout: 86400 sec)
cbmc running time: 25.039 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 117.723 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1217.29 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 100, timeout: 86400 sec)
cbmc running time: 23.649 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 141.372 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1303.64 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 110, timeout: 86400 sec)
cbmc running time: 29.454 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 170.826 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1474.66 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 120, timeout: 86400 sec)
cbmc running time: 32.159 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 202.985 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1654.09 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 130, timeout: 86400 sec)
cbmc running time: 37.876 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 240.861 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1880.54 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 140, timeout: 86400 sec)
cbmc running time: 33.3 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 274.161 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1880.54 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 150, timeout: 86400 sec)
cbmc running time: 40.585 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 314.746 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2152.89 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 160, timeout: 86400 sec)
cbmc running time: 47.598 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 362.344 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2310.00 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 170, timeout: 86400 sec)
cbmc running time: 43.897 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 406.241 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2462.43 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 180, timeout: 86400 sec)
cbmc running time: 52.872 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 459.113 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2462.43 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 190, timeout: 86400 sec)
cbmc running time: 52.0 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 511.113 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2738.29 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 200, timeout: 86400 sec)
cbmc running time: 53.217 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 564.33 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2765.79 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 210, timeout: 86400 sec)
cbmc running time: 79.546 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 643.876 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2825.41 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 220, timeout: 86400 sec)
cbmc running time: 68.923 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 712.799 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3017.29 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 230, timeout: 86400 sec)
cbmc running time: 69.981 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 782.78 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3336.94 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 240, timeout: 86400 sec)
cbmc running time: 70.158 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 852.938 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3516.00 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 250, timeout: 86400 sec)
cbmc running time: 78.992 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 931.93 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3653.04 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 260, timeout: 86400 sec)
cbmc running time: 80.525 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1012.455 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3767.88 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 270, timeout: 86400 sec)
cbmc running time: 103.858 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1116.313 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3973.82 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 280, timeout: 86400 sec)
cbmc running time: 101.354 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1217.667 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3973.82 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 290, timeout: 86400 sec)
cbmc running time: 91.23 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1308.897 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4250.03 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 300, timeout: 86400 sec)
cbmc running time: 95.879 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1404.776 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4267.49 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 106.166 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1510.942 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4530.02 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 320, timeout: 86400 sec)
cbmc running time: 99.962 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1610.904 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4666.06 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 330, timeout: 86400 sec)
cbmc running time: 108.237 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1719.141 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4785.58 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 340, timeout: 86400 sec)
cbmc running time: 134.633 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1853.774 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4999.34 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 350, timeout: 86400 sec)
cbmc running time: 175.848 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2029.622 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5167.01 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 360, timeout: 86400 sec)
cbmc running time: 121.79 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2151.412 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5313.23 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 370, timeout: 86400 sec)
cbmc running time: 138.232 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2289.644 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5454.86 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 380, timeout: 86400 sec)
cbmc running time: 170.453 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2460.097 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5593.17 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 390, timeout: 86400 sec)
cbmc running time: 125.004 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2585.101 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5724.46 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 400, timeout: 86400 sec)
cbmc running time: 164.325 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2749.426 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5804.25 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 410, timeout: 86400 sec)
cbmc running time: 143.052 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2892.478 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 6052.52 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 420, timeout: 86400 sec)
cbmc running time: 158.631 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3051.109 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 6192.21 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 430, timeout: 86400 sec)
cbmc running time: 167.611 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3218.72 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 6342.22 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 440, timeout: 86400 sec)
cbmc running time: 163.275 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3381.995 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 6481.59 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 450, timeout: 86400 sec)
cbmc running time: 168.747 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3550.742 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 6635.18 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 460, timeout: 86400 sec)
cbmc running time: 192.814 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3743.556 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 6780.29 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 470, timeout: 86400 sec)
cbmc running time: 215.732 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3959.288 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 6929.82 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 480, timeout: 86400 sec)
cbmc running time: 180.347 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4139.635 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7147.42 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 490, timeout: 86400 sec)
cbmc running time: 228.476 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4368.111 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7243.52 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 500, timeout: 86400 sec)
cbmc running time: 299.71 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4667.821 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7459.20 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 510, timeout: 86400 sec)
cbmc running time: 218.482 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4886.303 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7603.80 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 520, timeout: 86400 sec)
cbmc running time: 290.865 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5177.168 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7753.24 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 530, timeout: 86400 sec)
cbmc running time: 261.467 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5438.635 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7900.84 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 540, timeout: 86400 sec)
cbmc running time: 322.455 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5761.09 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 8058.48 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 550, timeout: 86400 sec)
cbmc running time: 248.483 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6009.573 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 8198.52 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 560, timeout: 86400 sec)
cbmc running time: 370.26 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6379.833 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 8344.27 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 570, timeout: 86400 sec)
cbmc running time: 308.25 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6688.083 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 8495.67 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 580, timeout: 86400 sec)
cbmc running time: 291.71 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6979.793 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 8654.18 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 590, timeout: 86400 sec)
cbmc running time: 263.371 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 7243.164 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 8802.11 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 600, timeout: 86400 sec)
cbmc running time: 358.666 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 7601.83 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 8978.35 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 961.38 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 0.244 sec

Iteration 1:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[0][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 7
# constraints: 18

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=1) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 2
# constraints: 11

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 612.438 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 0.51 sec

Iteration 2:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]>=1) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 9
# constraints: 24

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=1) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 2
# constraints: 11

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 506.422 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 0.191 sec

Iteration 3:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]>=1) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 9
# constraints: 24

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(0==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][2]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 19

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 928.511 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 0.562 sec

Iteration 4:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[0][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[0][0]) if(orderMatrix[2][3]>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 11
# constraints: 29

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][3]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 7
# constraints: 23

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 909.601 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 0.573 sec

Iteration 5:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[2][1]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][0]>=orderMatrix[1][3]) if(orderMatrix[0][1]>=orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 12
# constraints: 31

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][0]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][0]==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 8
# constraints: 31

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 668.686 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 0.997 sec

Iteration 6:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=motorDir) if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]>=1) if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[1][0]>=orderMatrix[1][3]) if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = floorNum; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 19
# constraints: 35

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(orderMatrix[1][2]>=orderMatrix[0][0]) if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[2][2]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
# constraints: 33

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 479.392 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 1.373 sec

Iteration 7:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[2][1]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[1][2]) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[1][2]) if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]>=orderMatrix[2][2]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 32
# constraints: 42

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[1][3]==orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][2]==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 12
# constraints: 39

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 466.941 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 3.441 sec

Iteration 8:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]>=orderMatrix[1][2]) if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=motorDir) if(1==orderMatrix[0][2]) if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]>=orderMatrix[2][0]) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][1]>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 35
# constraints: 45

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][2]>=2) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][1]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 8
# constraints: 40

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 942.171 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 2.084 sec

Iteration 9:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]>=orderMatrix[1][0]) if(orderMatrix[0][3]>=orderMatrix[0][2]) if(orderMatrix[0][3]>=orderMatrix[2][0]) if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]>=orderMatrix[1][0]) if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(0==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 34
# constraints: 47

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 772.113 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 2.009 sec

Iteration 10:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[2][1]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[0][2]) if(orderMatrix[2][3]>=orderMatrix[2][2]) if(orderMatrix[2][3]>=orderMatrix[1][2]) if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]==orderMatrix[0][3]) if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(floorNum>=2) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<floorNum) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][0]<floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = floorNum; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 40
# constraints: 50

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 926.827 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 2.362 sec

Iteration 11:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[2][1]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][3]>=orderMatrix[0][2]) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]>=motorDir) if(orderMatrix[2][3]>=orderMatrix[0][1]) if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]>=orderMatrix[0][1]) if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 39
# constraints: 55

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 681.151 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 6.165 sec

Iteration 12:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]>=motorDir) if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 36
# constraints: 60

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 837.335 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 3.571 sec

Iteration 13:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[2][1]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=motorDir) if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) if(orderMatrix[1][2]>=motorDir) if(orderMatrix[2][3]>=motorDir) if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]>=orderMatrix[1][1]) if(orderMatrix[1][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 43
# constraints: 64

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 823.73 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 13.008 sec

Iteration 14:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]>=orderMatrix[1][0]) if(orderMatrix[0][3]>=orderMatrix[1][0]) if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(1==orderMatrix[0][3]) if(orderMatrix[1][3]>=orderMatrix[0][1]) if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]>=orderMatrix[1][0]) if(orderMatrix[1][3]>=orderMatrix[0][0]) if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]>=orderMatrix[2][2]) if(orderMatrix[1][2]>=orderMatrix[0][0]) if(orderMatrix[1][2]>=orderMatrix[1][0]) if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]==orderMatrix[0][0]) if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir<floorNum) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]>=orderMatrix[1][1]) if(orderMatrix[2][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 49
# constraints: 69

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 635.545 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 12.524 sec

Iteration 15:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = floorNum; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(0==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]>=orderMatrix[2][1]) if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]>=orderMatrix[0][1]) if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]==orderMatrix[0][0]) if(motorDir>=orderMatrix[0][1]) if(orderMatrix[1][1]>=orderMatrix[0][1]) if(orderMatrix[1][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 50
# constraints: 74

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 725.011 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 11.771 sec

Iteration 16:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]>=orderMatrix[0][0]) if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]>=orderMatrix[2][1]) if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]>=orderMatrix[2][1]) if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(1==orderMatrix[0][3]) if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]>=orderMatrix[2][2]) if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(1==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 53
# constraints: 83

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 982.715 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 7.641 sec

Iteration 17:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]>=motorDir) if(orderMatrix[0][0]>=motorDir) if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][1]>=motorDir) if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]>=motorDir) if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(0==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 47
# constraints: 85

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 899.37 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 19.867 sec

Iteration 18:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][0]>=motorDir) if(orderMatrix[2][2]>=motorDir) if(orderMatrix[1][3]>=motorDir) if(orderMatrix[0][3]>=motorDir) if(orderMatrix[2][0]>=motorDir) if(orderMatrix[1][1]>=motorDir) if(orderMatrix[1][0]>=motorDir) if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir<orderMatrix[2][3]) if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][1]>=orderMatrix[2][1]) if(floorNum>=2) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]>=floorNum) if(orderMatrix[0][1]>=floorNum) if(orderMatrix[1][3]>=floorNum) if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir<orderMatrix[0][1]) if(motorDir<orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 52
# constraints: 93

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1230.923 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 8.629 sec

Iteration 19:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[2][1]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]>=orderMatrix[0][2]) if(orderMatrix[2][3]>=motorDir) if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]>=motorDir) if(orderMatrix[0][0]>=motorDir) if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]>=orderMatrix[0][2]) if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]>=orderMatrix[2][1]) if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=motorDir) if(orderMatrix[1][2]>=motorDir) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][1]>=motorDir) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=motorDir) if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir<floorNum) if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]>=orderMatrix[2][1]) if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 56
# constraints: 102

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 799.404 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 17.536 sec

Iteration 20:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[0][1]) if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=orderMatrix[1][2]) if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]>=motorDir) if(orderMatrix[0][0]>=motorDir) if(orderMatrix[2][2]>=orderMatrix[1][2]) if(orderMatrix[0][2]>=orderMatrix[1][2]) if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][3]>=orderMatrix[1][2]) if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][2]>=motorDir) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[1][3]>=orderMatrix[1][2]) if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]>=motorDir) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=motorDir) if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]>=orderMatrix[0][1]) if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir<floorNum) if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 58
# constraints: 106

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 999.639 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 9.045 sec

Iteration 21:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = 1; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=orderMatrix[0][2]) if(orderMatrix[2][3]>=motorDir) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]>=orderMatrix[1][1]) if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=orderMatrix[0][2]) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=motorDir) if(orderMatrix[0][0]>=motorDir) if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][3]>=orderMatrix[0][2]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]>=orderMatrix[1][1]) if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]>=orderMatrix[1][1]) if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(0==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 50
# constraints: 109

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 954.355 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 19.747 sec

Iteration 22:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[2][2]>=motorDir) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]>=motorDir) if(1==orderMatrix[0][3]) if(orderMatrix[1][2]>=motorDir) if(orderMatrix[0][0]>=motorDir) if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]>=orderMatrix[0][1]) if(orderMatrix[1][1]==motorDir) if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 56
# constraints: 116

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 832.423 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 31.644 sec

Iteration 23:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=motorDir) if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=motorDir) if(orderMatrix[2][0]>=motorDir) if(orderMatrix[0][0]>=motorDir) if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][1]>=orderMatrix[0][1]) if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 58
# constraints: 121

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 966.59 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 24.2 sec

Iteration 24:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]>=orderMatrix[0][2]) if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]>=orderMatrix[0][2]) if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]>=orderMatrix[0][2]) if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]==orderMatrix[0][2]) if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 59
# constraints: 129

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1173.726 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 21.32 sec

Iteration 25:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]>=orderMatrix[1][2]) if(orderMatrix[0][2]>=orderMatrix[1][2]) if(orderMatrix[1][3]>=orderMatrix[1][2]) if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]>=orderMatrix[1][0]) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum>=2) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]>=orderMatrix[1][0]) if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]>=orderMatrix[0][0]) if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 62
# constraints: 134

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1763.319 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 15.658 sec

Iteration 26:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[2][1]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) if(orderMatrix[2][3]==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) if(orderMatrix[0][2]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]>=motorDir) if(motorDir<floorNum) if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(1==orderMatrix[0][3]) if(orderMatrix[1][0]>=orderMatrix[1][1]) if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]>=orderMatrix[1][1]) if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(0==motorDir) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 59
# constraints: 143

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1172.588 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 36.261 sec

Iteration 27:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][1]) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]>=orderMatrix[1][2]) if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][1]==motorDir) if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]==floorNum) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 64
# constraints: 149

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1529.274 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 16.797 sec

Iteration 28:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[2][1]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]>=orderMatrix[0][1]) if(orderMatrix[2][3]>=orderMatrix[0][0]) if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]>=orderMatrix[0][2]) if(1==orderMatrix[2][3]) if(orderMatrix[2][2]<orderMatrix[1][2]) if(orderMatrix[0][2]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]>=orderMatrix[0][2]) if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]>=orderMatrix[0][2]) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]>=orderMatrix[0][2]) if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(1==orderMatrix[0][3]) if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][2]==orderMatrix[0][2]) if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 61
# constraints: 156

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 982.227 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 16.267 sec

Iteration 29:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[2][1]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[0][0]) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=orderMatrix[1][2]) if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]>=orderMatrix[0][2]) if(1==orderMatrix[2][3]) if(orderMatrix[2][2]>=orderMatrix[1][2]) if(orderMatrix[2][2]>=orderMatrix[0][2]) if(orderMatrix[0][3]>=orderMatrix[1][2]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]>=orderMatrix[0][2]) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]>=orderMatrix[1][2]) if(orderMatrix[1][3]>=orderMatrix[0][2]) if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(1==orderMatrix[0][3]) if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]==floorNum) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 61
# constraints: 165

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1412.551 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 78.687 sec

Iteration 30:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][0]) if(2==floorNum) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]>=orderMatrix[0][1]) if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[0][0]>=motorDir) if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]>=motorDir) if(orderMatrix[2][2]>=motorDir) if(orderMatrix[2][1]>=motorDir) if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir<orderMatrix[0][0]) if(motorDir<orderMatrix[0][3]) if(orderMatrix[2][2]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]==orderMatrix[0][2]) if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[0][2]) if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 66
# constraints: 172

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 6
# constraints: 44

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1118.01 sec

verification results: 
property 'assert((state != 2));' is TRUE alarm.

total CBMC running time: 36296.2 sec
total true alarm finding time: 0.0 sec
total refinement time: 384.685 sec, # of refinements: 30
peak memory usage: 12648.60 MB