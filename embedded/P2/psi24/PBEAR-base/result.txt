--src data/elev/src/p3/elev.c --wd results/elevator/p3/no_alarm --unwind 1000 --object-bits 14 --no-alarm-filtering --synth-dir results/elevator/synth --synth-timeout 600 --synth-max-size 512 --synth-max-height 15 
code parsing time: 0.814 sec

select target function calls:
floorIsOrdered(previousMainFloor, motorDirection) (call id 32) influences 12 external nodes
internal node ratio: 17.88% (128 of 716)

floorIsOrdered(previousMainFloor, motorDirection) (call id 38) influences 12 external nodes
internal node ratio: 19.13% (137 of 716)

elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54) influences 5 external nodes
internal node ratio: 0.84% (6 of 716)

isButtonPressed() (call id 29) influences 7 external nodes
internal node ratio: 2.93% (21 of 716)

find the best target combination:
predict complexity: (unwind 1000)
criterion unwind: 8
floorIsOrdered(previousMainFloor, motorDirection): original cmplx: 157, stub cmplx: 3
elev_get_button_signal((elev_button_type_t)(button), floorNum): original cmplx: 1, stub cmplx: 0
isButtonPressed(): original cmplx: 136, stub cmplx: 3
total cmplx: 8214

Aug 02, 2023 11:07:15 AM iv_checker.select.TargetFunctionSelector printRank
INFO: 
1. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection); elev_get_button_signal((elev_button_type_t)(button), floorNum); isButtonPressed();  fitness: 5.959
2. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection); elev_get_button_signal((elev_button_type_t)(button), floorNum);  fitness: 5.367
3. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed();  fitness: 4.803
4. elev_get_button_signal((elev_button_type_t)(button), floorNum); isButtonPressed();  fitness: 4.592
5. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 4.107

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 10, timeout: 86400 sec)
cbmc running time: 1.534 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1.534 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 131.19 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 20, timeout: 86400 sec)
cbmc running time: 3.658 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 5.192 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 251.30 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 30, timeout: 86400 sec)
cbmc running time: 7.416 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 12.608 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 376.95 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 40, timeout: 86400 sec)
cbmc running time: 13.23 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 25.838 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 526.35 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 50, timeout: 86400 sec)
cbmc running time: 16.107 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 41.945 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 646.54 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 60, timeout: 86400 sec)
cbmc running time: 20.052 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 61.997 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 815.20 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 70, timeout: 86400 sec)
cbmc running time: 33.346 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 95.343 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 915.28 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 80, timeout: 86400 sec)
cbmc running time: 27.369 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 122.712 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1107.70 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 90, timeout: 86400 sec)
cbmc running time: 26.792 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 149.504 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1194.57 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 100, timeout: 86400 sec)
cbmc running time: 48.304 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 197.808 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1330.85 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 110, timeout: 86400 sec)
cbmc running time: 36.596 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 234.404 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1589.41 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 120, timeout: 86400 sec)
cbmc running time: 53.372 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 287.776 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1618.14 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 130, timeout: 86400 sec)
cbmc running time: 52.176 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 339.952 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 1741.92 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 140, timeout: 86400 sec)
cbmc running time: 85.543 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 425.495 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2016.99 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 150, timeout: 86400 sec)
cbmc running time: 76.425 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 501.92 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2188.91 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 160, timeout: 86400 sec)
cbmc running time: 104.607 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 606.527 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2290.37 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 170, timeout: 86400 sec)
cbmc running time: 173.942 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 780.469 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2434.09 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 180, timeout: 86400 sec)
cbmc running time: 96.247 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 876.716 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2438.98 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 190, timeout: 86400 sec)
cbmc running time: 203.411 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1080.127 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2664.35 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 200, timeout: 86400 sec)
cbmc running time: 156.821 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1236.948 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2905.82 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 210, timeout: 86400 sec)
cbmc running time: 160.718 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1397.666 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 2905.82 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 220, timeout: 86400 sec)
cbmc running time: 198.33 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1595.996 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3237.11 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 230, timeout: 86400 sec)
cbmc running time: 225.366 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1821.362 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3237.11 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 240, timeout: 86400 sec)
cbmc running time: 173.815 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1995.177 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3441.12 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 250, timeout: 86400 sec)
cbmc running time: 253.664 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 2248.841 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3657.05 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 260, timeout: 86400 sec)
cbmc running time: 286.706 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 2535.547 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3764.59 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 270, timeout: 86400 sec)
cbmc running time: 277.095 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 2812.642 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 3980.66 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 280, timeout: 86400 sec)
cbmc running time: 322.528 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 3135.17 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4121.97 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 290, timeout: 86400 sec)
cbmc running time: 493.702 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 3628.872 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4460.41 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 300, timeout: 86400 sec)
cbmc running time: 395.997 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 4024.869 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4460.41 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 474.731 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 4499.6 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4855.88 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 320, timeout: 86400 sec)
cbmc running time: 613.164 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 5112.764 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 4962.46 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 330, timeout: 86400 sec)
cbmc running time: 1550.835 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 6663.599 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5846.61 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 340, timeout: 86400 sec)
cbmc running time: 744.973 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 7408.572 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5846.61 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 350, timeout: 86400 sec)
cbmc running time: 731.373 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 8139.945 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5846.61 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 360, timeout: 86400 sec)
cbmc running time: 498.902 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 8638.847 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5904.57 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 370, timeout: 86400 sec)
cbmc running time: 568.033 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 9206.88 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5951.71 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 380, timeout: 86400 sec)
cbmc running time: 798.343 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 10005.223 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 5951.71 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 390, timeout: 86400 sec)
cbmc running time: 1618.601 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 11623.824 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 6030.23 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 400, timeout: 86400 sec)
cbmc running time: 1794.35 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 13418.174 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7053.27 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 410, timeout: 86400 sec)
cbmc running time: 1865.58 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 15283.754 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7706.32 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 420, timeout: 86400 sec)
cbmc running time: 1044.696 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 16328.45 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7706.32 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 430, timeout: 86400 sec)
cbmc running time: 2200.63 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 18529.08 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7706.32 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 440, timeout: 86400 sec)
cbmc running time: 1057.92 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 19587.0 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 7706.32 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 450, timeout: 86400 sec)
cbmc running time: 2308.798 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 21895.799 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 8923.25 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 460, timeout: 86400 sec)
cbmc running time: 2299.782 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 24195.58 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 8946.74 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 470, timeout: 86400 sec)
cbmc running time: 3946.573 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 28142.152 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 9508.31 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 480, timeout: 86400 sec)
cbmc running time: 2869.131 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 31011.283 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 9512.19 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 490, timeout: 86400 sec)
cbmc running time: 1590.834 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 32602.117 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 9512.19 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 500, timeout: 86400 sec)
cbmc running time: 3395.437 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 35997.555 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 12516.62 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 510, timeout: 86400 sec)
cbmc running time: 4640.049 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 40637.605 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 12516.62 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 520, timeout: 86400 sec)
cbmc running time: 4462.947 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 45100.55 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 12516.62 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 530, timeout: 86400 sec)
cbmc running time: 2157.105 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 47257.656 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 12516.62 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 540, timeout: 86400 sec)
cbmc running time: 3815.043 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 51072.7 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 12516.62 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 550, timeout: 86400 sec)
cbmc running time: 5957.352 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 57030.05 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 15183.40 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 560, timeout: 86400 sec)
cbmc running time: 3881.98 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 60912.03 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 15183.40 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 570, timeout: 86400 sec)
cbmc running time: 3596.586 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 64508.617 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 15183.40 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 580, timeout: 86400 sec)
cbmc running time: 6696.511 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 71205.125 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 15183.40 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 590, timeout: 86400 sec)
cbmc running time: 5621.236 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 76826.37 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 15183.40 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 600, timeout: 86400 sec)
cbmc running time: 5838.209 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 82664.58 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 15217.41 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 3
accuracy: 77.56%
coverage: 100.00%
# constraints: 9

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 21192.68 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 0.223 sec

Iteration 1:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(orderMatrix[1][2]<orderMatrix[2][3]) if((-1)==motorDir) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 7
# constraints: 14

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
accuracy: 83.83%
coverage: 100.00%
# constraints: 10

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 3748.899 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 0.51 sec

Iteration 2:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 10
# constraints: 19

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=1) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 11

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 8013.712 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 1.488 sec

Iteration 3:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=orderMatrix[1][0]) if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = floorNum; else if(motorDir>=orderMatrix[2][2]) if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][1]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 18
# constraints: 33

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=1) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 11

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 5435.495 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 1.291 sec

Iteration 4:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]>=orderMatrix[2][2]) if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
# constraints: 41

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=1) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 11

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 9924.231 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 2.734 sec

Iteration 5:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]>=orderMatrix[2][0]) if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]>=orderMatrix[1][3]) if(orderMatrix[1][1]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = floorNum; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 25
# constraints: 48

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=1) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 11

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 9096.922 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 4.409 sec

Iteration 6:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(1==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][1]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 32
# constraints: 54

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=1) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 11

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 5015.803 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 5.572 sec

Iteration 7:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if(orderMatrix[0][3]>=orderMatrix[1][1]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]>=orderMatrix[0][0]) if(orderMatrix[1][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[0][2]) if(orderMatrix[1][1]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 37
# constraints: 61

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 6070.131 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 4.799 sec

Iteration 8:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]>=orderMatrix[2][2]) if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]>=orderMatrix[2][1]) if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]>=orderMatrix[2][2]) if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 42
# constraints: 74

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 4593.611 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 9.333 sec

Iteration 9:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]>=orderMatrix[2][0]) if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][3]>=orderMatrix[1][0]) if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum>=orderMatrix[2][0]) if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(motorDir==floorNum) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]==orderMatrix[2][2]) if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 51
# constraints: 79

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 7103.82 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 28.121 sec

Iteration 10:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]>=orderMatrix[1][0]) if(orderMatrix[2][3]>=orderMatrix[1][0]) if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]==orderMatrix[2][2]) if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 55
# constraints: 86

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 8317.485 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 14.064 sec

Iteration 11:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]>=orderMatrix[0][1]) if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]==orderMatrix[2][2]) if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 56
# constraints: 94

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 6963.816 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 15.789 sec

Iteration 12:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[2][2]>=motorDir) if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]>=motorDir) if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 55
# constraints: 103

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 5801.384 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 25.519 sec

Iteration 13:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[2][0]) if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]>=orderMatrix[2][0]) if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[2][3]) if(orderMatrix[0][3]>=orderMatrix[2][2]) if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(floorNum<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir==floorNum) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]<floorNum) if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]==orderMatrix[2][2]) if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir>=orderMatrix[2][1]) if(orderMatrix[1][0]<floorNum) if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 50
# constraints: 113

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 8375.365 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 21.947 sec

Iteration 14:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]>=orderMatrix[2][2]) if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[0][2]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(motorDir==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=orderMatrix[2][1]) if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 59
# constraints: 119

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 6720.256 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 24.243 sec

Iteration 15:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 54
# constraints: 138

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 4761.815 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 62.973 sec

Iteration 16:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if(orderMatrix[0][3]>=orderMatrix[1][1]) if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]>=orderMatrix[1][1]) if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]>=motorDir) if(motorDir<floorNum) if(orderMatrix[2][3]>=orderMatrix[2][2]) if(orderMatrix[2][2]<floorNum) if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[1][3]>=orderMatrix[2][2]) if(orderMatrix[2][2]==orderMatrix[1][2]) if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 76
# constraints: 157

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 4197.487 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 33.891 sec

Iteration 17:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]>=orderMatrix[0][1]) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]>=orderMatrix[0][2]) if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[2][3]>=orderMatrix[2][2]) if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(motorDir<floorNum) if(orderMatrix[0][2]<floorNum) if(orderMatrix[2][2]<floorNum) if(orderMatrix[0][1]<floorNum) if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = floorNum; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 72
# constraints: 164

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 15974.696 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 52.529 sec

Iteration 18:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][1]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 78
# constraints: 172

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 5057.144 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.

synthesize new stub refined by counterexamples (unit timeout: 600 sec)
on each refinement:
refinement time: 36.254 sec

Iteration 19:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(2>=floorNum) if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[1][0]) if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][3]>=orderMatrix[1][0]) if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][1]>=orderMatrix[1][0]) if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]>=orderMatrix[0][1]) if(orderMatrix[2][3]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[2][0]) if(motorDir<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][0]==orderMatrix[0][2]) if(orderMatrix[2][1]>=orderMatrix[2][3]) if(motorDir<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 73
# constraints: 177

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][1]>=2) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][1]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 3
# constraints: 12

run cbmc: (unwind: 610, timeout: 86400 sec)
 
