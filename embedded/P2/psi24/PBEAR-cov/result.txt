--src data/elev/src/p3/elev.c --wd results/elevator/p3/acc --unwind 1000 --object-bits 14 --synth-only-acc --synth-dir results/elevator/acc/synth --synth-timeout 600 --synth-max-size 512 --synth-max-height 15 
code parsing time: 0.755 sec

select target function calls:
floorIsOrdered(previousMainFloor, motorDirection) (call id 32) influences 12 external nodes
internal node ratio: 17.88% (128 of 716)

floorIsOrdered(previousMainFloor, motorDirection) (call id 38) influences 12 external nodes
internal node ratio: 19.13% (137 of 716)

elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54) influences 5 external nodes
internal node ratio: 0.84% (6 of 716)

isButtonPressed() (call id 29) influences 7 external nodes
internal node ratio: 2.93% (21 of 716)

find the best target combination:
predict complexity: (unwind 1000)
criterion unwind: 8
floorIsOrdered(previousMainFloor, motorDirection): original cmplx: 157, stub cmplx: 22
elev_get_button_signal((elev_button_type_t)(button), floorNum): original cmplx: 1, stub cmplx: 0
isButtonPressed(): original cmplx: 136, stub cmplx: 9
total cmplx: 8214

Jul 22, 2023 10:27:34 AM iv_checker.select.TargetFunctionSelector printRank
INFO: 
1. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection); elev_get_button_signal((elev_button_type_t)(button), floorNum); isButtonPressed();  fitness: 2.966
2. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection); elev_get_button_signal((elev_button_type_t)(button), floorNum);  fitness: 2.330
3. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed();  fitness: 1.909
4. elev_get_button_signal((elev_button_type_t)(button), floorNum); isButtonPressed();  fitness: 1.635
5. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 1.038

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 10, timeout: 86400 sec)
cbmc running time: 1.788 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1.788 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 143.05 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 20, timeout: 86400 sec)
cbmc running time: 4.481 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 6.269 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 290.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 30, timeout: 86400 sec)
cbmc running time: 8.081 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 14.35 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 460.42 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 40, timeout: 86400 sec)
cbmc running time: 13.608 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 27.958 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 619.08 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 50, timeout: 86400 sec)
cbmc running time: 21.425 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 49.383 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 787.71 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 60, timeout: 86400 sec)
cbmc running time: 23.763 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 73.146 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 940.47 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 70, timeout: 86400 sec)
cbmc running time: 29.581 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 102.727 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1152.52 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 80, timeout: 86400 sec)
cbmc running time: 27.376 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 130.103 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1246.11 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 90, timeout: 86400 sec)
cbmc running time: 35.819 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 165.922 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1409.29 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 100, timeout: 86400 sec)
cbmc running time: 38.204 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 204.126 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1672.41 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 110, timeout: 86400 sec)
cbmc running time: 54.142 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 258.268 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1753.41 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 120, timeout: 86400 sec)
cbmc running time: 55.88 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 314.148 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1873.85 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 130, timeout: 86400 sec)
cbmc running time: 48.544 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 362.692 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2068.02 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 140, timeout: 86400 sec)
cbmc running time: 67.087 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 429.779 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2287.60 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 150, timeout: 86400 sec)
cbmc running time: 80.927 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 510.706 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2381.54 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 160, timeout: 86400 sec)
cbmc running time: 104.34 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 615.046 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2543.42 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 170, timeout: 86400 sec)
cbmc running time: 117.678 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 732.724 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2662.63 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 180, timeout: 86400 sec)
cbmc running time: 122.228 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 854.952 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2806.19 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 190, timeout: 86400 sec)
cbmc running time: 162.974 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1017.926 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3040.89 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 200, timeout: 86400 sec)
cbmc running time: 197.265 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1215.191 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3381.71 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 210, timeout: 86400 sec)
cbmc running time: 178.97 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1394.161 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3381.71 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 220, timeout: 86400 sec)
cbmc running time: 191.294 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1585.455 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3706.84 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 230, timeout: 86400 sec)
cbmc running time: 206.793 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1792.248 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3860.79 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 240, timeout: 86400 sec)
cbmc running time: 178.989 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 1971.237 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4073.32 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 250, timeout: 86400 sec)
cbmc running time: 257.809 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 2229.046 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4204.76 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 260, timeout: 86400 sec)
cbmc running time: 417.312 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 2646.358 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4381.40 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 270, timeout: 86400 sec)
cbmc running time: 395.258 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 3041.616 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4659.50 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 280, timeout: 86400 sec)
cbmc running time: 508.37 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 3549.986 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4818.08 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 290, timeout: 86400 sec)
cbmc running time: 474.062 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 4024.048 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5098.73 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 300, timeout: 86400 sec)
cbmc running time: 571.812 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 4595.86 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5218.98 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 661.86 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 5257.72 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5484.09 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 320, timeout: 86400 sec)
cbmc running time: 447.0 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 5704.72 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5485.30 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 330, timeout: 86400 sec)
cbmc running time: 780.876 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 6485.596 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6113.40 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 340, timeout: 86400 sec)
cbmc running time: 1286.565 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 7772.161 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6519.71 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 350, timeout: 86400 sec)
cbmc running time: 960.035 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 8732.196 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6519.71 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 360, timeout: 86400 sec)
cbmc running time: 918.439 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 9650.635 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6519.71 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 370, timeout: 86400 sec)
cbmc running time: 768.572 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 10419.207 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7152.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 380, timeout: 86400 sec)
cbmc running time: 861.399 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 11280.606 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7152.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 390, timeout: 86400 sec)
cbmc running time: 927.261 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 12207.867 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7152.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 400, timeout: 86400 sec)
cbmc running time: 1214.435 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 13422.302 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7609.00 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 410, timeout: 86400 sec)
cbmc running time: 921.592 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 14343.894 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7729.77 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 420, timeout: 86400 sec)
cbmc running time: 1381.276 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 15725.17 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8319.33 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 430, timeout: 86400 sec)
cbmc running time: 3070.067 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 18795.236 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10031.54 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 440, timeout: 86400 sec)
cbmc running time: 1546.123 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 20341.36 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10031.54 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 450, timeout: 86400 sec)
cbmc running time: 1121.805 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 21463.164 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10031.54 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 460, timeout: 86400 sec)
cbmc running time: 2555.453 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 24018.617 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10435.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 470, timeout: 86400 sec)
cbmc running time: 2625.753 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 26644.371 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10435.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 480, timeout: 86400 sec)
cbmc running time: 2972.732 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 29617.104 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 11276.08 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 490, timeout: 86400 sec)
cbmc running time: 2668.559 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 32285.662 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 11276.08 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 500, timeout: 86400 sec)
cbmc running time: 1751.784 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 34037.45 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 11276.08 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 510, timeout: 86400 sec)
cbmc running time: 3720.951 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 37758.395 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 11663.32 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 520, timeout: 86400 sec)
cbmc running time: 3386.386 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 41144.785 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 11663.32 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 530, timeout: 86400 sec)
cbmc running time: 4770.779 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 45915.56 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 13099.10 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 540, timeout: 86400 sec)
cbmc running time: 5243.806 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 51159.367 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 13623.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 550, timeout: 86400 sec)
cbmc running time: 4086.175 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 55245.543 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 13623.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 560, timeout: 86400 sec)
cbmc running time: 3303.188 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 58548.73 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 13623.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 570, timeout: 86400 sec)
cbmc running time: 2901.521 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 61450.254 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 13623.80 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 580, timeout: 86400 sec)
cbmc running time: 6368.711 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 67818.96 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 15646.04 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 590, timeout: 86400 sec)
cbmc running time: 6039.429 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 73858.39 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 16688.38 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 600, timeout: 86400 sec)
cbmc running time: 6217.896 sec

verification results: 
property 'assert((state != 3));' is not violated.

total CBMC running time: 80076.29 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 17518.08 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 32)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 38)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 54)
call isButtonPressed() (call id 29)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 8745.864 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.323 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 5.882 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 5.769 sec

Iteration 1:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 26
# constraints: 41

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 15
# constraints: 31

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 12884.004 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 7.24 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 8.949 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 13.628 sec

Iteration 2:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(2==orderMatrix[0][3]) if(orderMatrix[0][3]==floorNum) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if((-1)>=orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 27
# constraints: 42

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 15
# constraints: 31

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 9337.667 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 6.983 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 8.705 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 21.658 sec

Iteration 3:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]==orderMatrix[1][0]) if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]>=orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=4) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 24
# constraints: 51

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 15
# constraints: 31

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 3755.864 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.221 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 5.327 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 26.42 sec

Iteration 4:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 1; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]<(-1)) if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[2][3]) if(orderMatrix[0][2]>=orderMatrix[2][2]) if(motorDir<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][0]>=2) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 37
# constraints: 57

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][2]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][1]>=orderMatrix[1][3]) if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 18
# constraints: 32

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 8601.52 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.488 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 5.693 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 32.95 sec

Iteration 5:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 36
# constraints: 62

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(0==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]>=orderMatrix[1][2]) if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 21
# constraints: 37

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 7530.435 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.372 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 5.797 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 40.576 sec

Iteration 6:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(5<orderMatrix[1][3]) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]>=orderMatrix[1][1]) if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=orderMatrix[1][1]) if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]==orderMatrix[1][2]) if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 55
# constraints: 74

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][0]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 12
# constraints: 38

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 6428.971 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.53 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 6.069 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 52.488 sec

Iteration 7:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][3]>=orderMatrix[2][1]) if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(0>=floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]==orderMatrix[0][2]) if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 66
# constraints: 84

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][0]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 12
# constraints: 38

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 5774.319 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 5.027 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 6.577 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 64.641 sec

Iteration 8:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]>=orderMatrix[0][1]) if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=orderMatrix[0][1]) if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]==orderMatrix[0][2]) if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 73
# constraints: 92

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][0]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 12
# constraints: 38

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 8575.049 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.623 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 5.886 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 60.707 sec

Iteration 9:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]>=orderMatrix[0][1]) if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[0][2]) if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(0>=floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(1==orderMatrix[0][3]) if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]>=orderMatrix[0][1]) if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[2][0]) if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 74
# constraints: 99

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][0]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 12
# constraints: 38

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 5942.561 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 5.159 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 6.508 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 68.801 sec

Iteration 10:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]>=orderMatrix[2][0]) if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]>=orderMatrix[1][1]) if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]>=orderMatrix[1][1]) if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=orderMatrix[1][0]) if(orderMatrix[2][2]>=orderMatrix[2][0]) if(orderMatrix[2][1]>=orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 72
# constraints: 108

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][0]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 12
# constraints: 38

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 5083.075 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.386 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 5.925 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 105.873 sec

Iteration 11:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[2][3]>=motorDir) if(orderMatrix[2][3]>=orderMatrix[2][1]) if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]>=motorDir) if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][2]>=motorDir) if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]>=motorDir) if(1==orderMatrix[2][3]) if(orderMatrix[0][1]>=motorDir) if(orderMatrix[2][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][1]>=motorDir) if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]>=orderMatrix[2][1]) if(1==orderMatrix[0][3]) if(orderMatrix[0][0]>=motorDir) if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]>=orderMatrix[2][1]) if(orderMatrix[0][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[1][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 82
# constraints: 122

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][0]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 12
# constraints: 38

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 7097.816 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.688 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 6.025 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 104.729 sec

Iteration 12:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]>=1) if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]>=orderMatrix[2][2]) if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][0]<floorNum) if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][0]<orderMatrix[2][3]) if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][0]<orderMatrix[1][3]) if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][0]<orderMatrix[0][3]) if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 78
# constraints: 131

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][0]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 12
# constraints: 38

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 1183.677 sec

verification results: 
property 'assert((state != 3));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 7.305 sec
property 'assert((state != 3));' is FALSE alarm.
true alarm finding time: 8.785 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 93.913 sec

Iteration 13:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][3]>=orderMatrix[1][1]) if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=motorDir) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][2]>=motorDir) if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[2][2]>=motorDir) if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][0]>=motorDir) if(orderMatrix[2][0]>=orderMatrix[1][1]) if(orderMatrix[2][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(1==orderMatrix[2][0]) if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]>=motorDir) if(motorDir<floorNum) if(orderMatrix[0][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][0]) if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 78
# constraints: 133

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][2]>=2) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][0]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 12
# constraints: 38

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 8847.254 sec

verification results: 
property 'assert((state != 3));' is TRUE alarm.

total CBMC running time: 179864.38 sec
total true alarm finding time: 86.128 sec
total refinement time: 692.154 sec
peak memory usage: 23626.22 MB