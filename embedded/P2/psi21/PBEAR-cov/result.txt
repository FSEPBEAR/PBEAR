--src data/elev/src/p4/elev.c --wd results/elevator/p4/acc --unwind 1000 --object-bits 14 --synth-only-acc --synth-dir results/elevator/acc/synth --synth-timeout 600 --synth-max-size 512 --synth-max-height 15 
code parsing time: 0.758 sec

select target function calls:
floorIsOrdered(previousMainFloor, motorDirection) (call id 20) influences 13 external nodes
internal node ratio: 19.18% (136 of 709)

isButtonPressed() (call id 11) influences 7 external nodes
internal node ratio: 2.96% (21 of 709)

elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28) influences 5 external nodes
internal node ratio: 0.85% (6 of 709)

floorIsOrdered(previousMainFloor, motorDirection) (call id 14) influences 13 external nodes
internal node ratio: 12.69% (90 of 709)

find the best target combination:
predict complexity: (unwind 1000)
criterion unwind: 8
floorIsOrdered(previousMainFloor, motorDirection): original cmplx: 157, stub cmplx: 22
isButtonPressed(): original cmplx: 136, stub cmplx: 9
elev_get_button_signal((elev_button_type_t)(button), floorNum): original cmplx: 1, stub cmplx: 0
total cmplx: 8198

Jul 24, 2023 12:38:26 PM iv_checker.select.TargetFunctionSelector printRank
INFO: 
1. floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed(); elev_get_button_signal((elev_button_type_t)(button), floorNum); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 2.966
2. floorIsOrdered(previousMainFloor, motorDirection); elev_get_button_signal((elev_button_type_t)(button), floorNum); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 2.330
3. floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed(); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 1.909
4. isButtonPressed(); elev_get_button_signal((elev_button_type_t)(button), floorNum);  fitness: 1.635
5. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 1.038

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 10, timeout: 86400 sec)
cbmc running time: 1.716 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1.716 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 147.27 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 20, timeout: 86400 sec)
cbmc running time: 4.1 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5.816 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 292.97 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 30, timeout: 86400 sec)
cbmc running time: 7.847 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 13.663 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 464.57 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 40, timeout: 86400 sec)
cbmc running time: 10.773 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 24.436 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 623.64 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 50, timeout: 86400 sec)
cbmc running time: 13.169 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 37.605 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 782.62 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 60, timeout: 86400 sec)
cbmc running time: 16.24 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 53.845 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 932.79 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 70, timeout: 86400 sec)
cbmc running time: 20.097 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 73.942 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1082.30 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 80, timeout: 86400 sec)
cbmc running time: 22.763 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 96.705 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1243.81 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 90, timeout: 86400 sec)
cbmc running time: 24.372 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 121.077 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1435.93 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 100, timeout: 86400 sec)
cbmc running time: 30.858 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 151.935 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1556.66 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 110, timeout: 86400 sec)
cbmc running time: 33.312 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 185.247 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1778.37 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 120, timeout: 86400 sec)
cbmc running time: 38.212 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 223.459 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1929.27 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 130, timeout: 86400 sec)
cbmc running time: 42.599 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 266.058 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2209.09 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 140, timeout: 86400 sec)
cbmc running time: 39.929 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 305.987 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2356.95 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 150, timeout: 86400 sec)
cbmc running time: 47.374 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 353.361 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2514.43 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 160, timeout: 86400 sec)
cbmc running time: 54.212 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 407.573 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2672.93 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 170, timeout: 86400 sec)
cbmc running time: 56.009 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 463.582 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2806.52 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 180, timeout: 86400 sec)
cbmc running time: 55.123 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 518.705 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2909.82 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 190, timeout: 86400 sec)
cbmc running time: 56.637 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 575.342 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3031.37 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 200, timeout: 86400 sec)
cbmc running time: 83.23 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 658.572 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3367.96 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 210, timeout: 86400 sec)
cbmc running time: 68.549 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 727.121 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3400.62 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 220, timeout: 86400 sec)
cbmc running time: 83.761 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 810.882 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3511.11 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 230, timeout: 86400 sec)
cbmc running time: 78.352 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 889.234 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3857.32 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 240, timeout: 86400 sec)
cbmc running time: 81.633 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 970.867 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4005.20 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 250, timeout: 86400 sec)
cbmc running time: 82.521 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1053.388 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4243.77 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 260, timeout: 86400 sec)
cbmc running time: 124.079 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1177.467 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4393.35 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 270, timeout: 86400 sec)
cbmc running time: 96.82 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1274.287 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4563.56 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 280, timeout: 86400 sec)
cbmc running time: 136.883 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1411.17 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4816.73 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 290, timeout: 86400 sec)
cbmc running time: 101.06 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1512.23 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4903.22 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 300, timeout: 86400 sec)
cbmc running time: 121.283 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1633.513 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5098.33 MB

call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 28)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 248.247 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 3.696 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.414 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 5.718 sec

Iteration 1:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(1==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(1==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(1==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(5<orderMatrix[1][3]) if(orderMatrix[2][3]==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][3]==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 28
# constraints: 47

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][1]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 10
# constraints: 25

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 209.575 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.227 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.213 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 8.629 sec

Iteration 2:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(0==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 1; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 19
# constraints: 49

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(0==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][1]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][1]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][0]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][1]>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 19
# constraints: 32

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 357.207 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.416 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.437 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 11.957 sec

Iteration 3:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 1; else if(2==floorNum) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) if(orderMatrix[0][3]==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 24
# constraints: 57

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][1]>=5) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 21
# constraints: 33

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 289.002 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.402 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.315 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 15.399 sec

Iteration 4:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) if(orderMatrix[0][3]==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
# constraints: 63

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][1]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][0]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][1]>=5) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][0]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][3]>=1) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 25
# constraints: 34

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 198.066 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.654 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.521 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 19.895 sec

Iteration 5:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) if(orderMatrix[0][0]>=2) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]>=4) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 40
# constraints: 66

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][1]==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][1]>=5) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 23
# constraints: 36

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 288.85 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 3.66 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 4.691 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 27.482 sec

Iteration 6:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 38
# constraints: 68

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][0]>=orderMatrix[1][2]) if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][1]>=orderMatrix[1][2]) if(orderMatrix[0][1]>=orderMatrix[2][3]) if(orderMatrix[1][3]==orderMatrix[1][2]) if(orderMatrix[0][3]>=1) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 25
# constraints: 38

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 302.362 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.649 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.481 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 27.754 sec

Iteration 7:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) if(orderMatrix[0][0]>=2) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[1][1]) if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[1][3]) if(orderMatrix[0][1]>=orderMatrix[1][3]) if(orderMatrix[0][1]>=orderMatrix[1][1]) if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]>=orderMatrix[1][0]) if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 46
# constraints: 70

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][0]>=orderMatrix[1][2]) if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][1]>=orderMatrix[1][2]) if(orderMatrix[0][1]>=orderMatrix[2][3]) if(orderMatrix[1][3]==orderMatrix[1][2]) if(orderMatrix[0][3]>=1) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 25
# constraints: 38

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 400.12 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.533 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.456 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 37.658 sec

Iteration 8:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[1][3]) if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 52
# constraints: 77

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(orderMatrix[2][1]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][3]>=orderMatrix[1][3]) if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[1][1]>=orderMatrix[1][3]) if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]==orderMatrix[1][2]) if(0==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 27
# constraints: 40

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 403.068 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.602 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.542 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 36.962 sec

Iteration 9:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]>=orderMatrix[1][0]) if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 41
# constraints: 83

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]>=orderMatrix[1][2]) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][3]>=1) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 29
# constraints: 41

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 278.317 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.506 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.462 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 43.432 sec

Iteration 10:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=orderMatrix[1][1]) if(orderMatrix[2][1]>=orderMatrix[1][1]) if(orderMatrix[0][3]>=orderMatrix[1][1]) if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]>=orderMatrix[1][1]) if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]>=orderMatrix[1][1]) if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]>=motorDir) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 70
# constraints: 90

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]>=orderMatrix[1][2]) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][3]>=1) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 29
# constraints: 41

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 569.63 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.556 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.771 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 46.354 sec

Iteration 11:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[0][1]) if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[2][0]) if(orderMatrix[2][1]>=orderMatrix[1][3]) if(orderMatrix[0][3]>=orderMatrix[0][0]) if(orderMatrix[0][3]>=orderMatrix[1][3]) if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]>=orderMatrix[0][0]) if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]>=orderMatrix[0][2]) if(orderMatrix[2][2]>=orderMatrix[1][1]) if(orderMatrix[2][1]>=orderMatrix[1][1]) if(orderMatrix[0][3]>=orderMatrix[1][1]) if(orderMatrix[0][3]>=orderMatrix[1][0]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=orderMatrix[1][3]) if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[1][0]) if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[0][2]) if(orderMatrix[2][1]>=orderMatrix[2][0]) if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[0][0]) if(orderMatrix[2][3]>=motorDir) if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]>=orderMatrix[1][1]) if(orderMatrix[1][2]>=orderMatrix[1][3]) if(orderMatrix[1][2]>=orderMatrix[2][0]) if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 67
# constraints: 99

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[2][2]) if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][3]<orderMatrix[1][2]) if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 23
# constraints: 45

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 515.555 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 3.024 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 4.086 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 52.887 sec

Iteration 12:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(0==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]>=orderMatrix[1][1]) if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 75
# constraints: 100

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(orderMatrix[2][1]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]>=orderMatrix[1][2]) if(orderMatrix[2][1]>=orderMatrix[1][2]) if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][3]>=orderMatrix[1][3]) if(orderMatrix[0][3]>=1) if(orderMatrix[2][3]>=orderMatrix[1][3]) if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 35
# constraints: 46

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 563.997 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.805 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.748 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 52.878 sec

Iteration 13:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[1][2]) if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]>=orderMatrix[1][3]) if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(0==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]>=orderMatrix[1][3]) if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[1][1]) if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum>=orderMatrix[0][0]) if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 69
# constraints: 104

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(orderMatrix[2][1]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]>=orderMatrix[1][2]) if(orderMatrix[2][1]>=orderMatrix[1][2]) if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(orderMatrix[0][3]>=orderMatrix[1][3]) if(orderMatrix[0][3]>=1) if(orderMatrix[2][3]>=orderMatrix[1][3]) if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 35
# constraints: 46

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 704.432 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.229 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 2.976 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 72.196 sec

Iteration 14:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]>=orderMatrix[2][3]) if(orderMatrix[2][2]>=orderMatrix[1][2]) if(orderMatrix[2][2]>=orderMatrix[0][3]) if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]>=orderMatrix[1][3]) if(orderMatrix[2][2]>=orderMatrix[0][2]) if(1==orderMatrix[2][2]) if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]>=motorDir) if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][1]>=motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 76
# constraints: 108

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(orderMatrix[2][1]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][2]>=orderMatrix[1][3]) if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]>=1) if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 33
# constraints: 48

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 581.148 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.289 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.179 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 57.828 sec

Iteration 15:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[0][1]) if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=motorDir) if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][1]>=orderMatrix[1][0]) if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]>=orderMatrix[0][3]) if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]>=orderMatrix[1][0]) if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=orderMatrix[1][0]) if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 72
# constraints: 114

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 31
# constraints: 50

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 499.022 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.258 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.104 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 77.735 sec

Iteration 16:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]>=orderMatrix[2][1]) if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[2][2]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]>=orderMatrix[1][3]) if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[0][2]>=motorDir) if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[1][3]) if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]>=orderMatrix[0][0]) if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]>=motorDir) if(orderMatrix[0][3]>=motorDir) if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]>=orderMatrix[1][3]) if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[0][1]>=motorDir) if(orderMatrix[0][1]>=orderMatrix[1][3]) if(orderMatrix[0][1]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[0][0]) if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]>=orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 70
# constraints: 119

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(orderMatrix[2][1]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][1]>=orderMatrix[1][3]) if(orderMatrix[2][3]>=orderMatrix[1][3]) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[1][3]) if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]>=1) if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 31
# constraints: 55

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 517.928 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.715 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.783 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 110.526 sec

Iteration 17:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]>=orderMatrix[2][1]) if(orderMatrix[0][3]>=orderMatrix[0][2]) if(1==orderMatrix[0][3]) if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]>=orderMatrix[2][1]) if(orderMatrix[2][2]>=orderMatrix[2][1]) if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir>=orderMatrix[2][1]) if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]==orderMatrix[0][2]) if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 77
# constraints: 124

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(orderMatrix[2][1]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][1]>=orderMatrix[1][3]) if(orderMatrix[2][3]>=orderMatrix[1][3]) if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[1][3]) if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(orderMatrix[0][3]>=1) if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 0; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 31
# constraints: 55

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 635.5 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.529 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.413 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 118.554 sec

Iteration 18:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]>=orderMatrix[2][3]) if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=orderMatrix[1][3]) if(orderMatrix[1][2]>=orderMatrix[1][3]) if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][0]>=motorDir) if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]>=orderMatrix[2][0]) if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]==orderMatrix[0][2]) if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]==orderMatrix[0][0]) if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][1]==orderMatrix[1][1]) if(orderMatrix[0][1]>=motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 83
# constraints: 131

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(0==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][2]>=orderMatrix[2][1]) if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 35
# constraints: 57

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 526.512 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.687 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.778 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 107.901 sec

Iteration 19:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[0][2]>=orderMatrix[1][0]) if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[0][2]>=motorDir) if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][3]>=orderMatrix[1][1]) if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]>=orderMatrix[1][1]) if(orderMatrix[0][0]>=orderMatrix[2][1]) if(orderMatrix[0][0]>=orderMatrix[1][1]) if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][1]<floorNum) if(motorDir<floorNum) if(orderMatrix[2][3]>=motorDir) if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][0]>=orderMatrix[0][1]) if(orderMatrix[2][2]==orderMatrix[0][0]) if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 83
# constraints: 135

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = 1; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(0==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = 1; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 1; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][2]>=orderMatrix[2][1]) if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 35
# constraints: 57

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 607.491 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.212 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.036 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 103.41 sec

Iteration 20:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 81
# constraints: 137

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[2][1]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 31
# constraints: 61

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 517.268 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.566 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.468 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 84.676 sec

Iteration 21:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=orderMatrix[0][1]) if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]>=orderMatrix[2][3]) if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(0==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]>=orderMatrix[0][1]) if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=orderMatrix[0][1]) if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][1]>=orderMatrix[0][1]) if(orderMatrix[1][0]>=orderMatrix[0][1]) if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]==orderMatrix[1][0]) if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 78
# constraints: 140

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[2][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[0][3]>=orderMatrix[2][2]) if((-1)>=orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[0][3]>=orderMatrix[2][3]) if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][0]>=orderMatrix[2][2]) if(orderMatrix[2][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if(orderMatrix[2][0]>=orderMatrix[0][1]) if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else __iv__return_expr_isButtonPressed = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 38
# constraints: 62

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 520.897 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.453 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.291 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 134.643 sec

Iteration 22:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=orderMatrix[2][0]) if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]>=orderMatrix[1][0]) if(orderMatrix[2][2]>=orderMatrix[2][1]) if(1==orderMatrix[2][2]) if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]>=orderMatrix[1][0]) if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]==orderMatrix[1][0]) if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(motorDir>=orderMatrix[2][1]) if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 80
# constraints: 144

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 560.65 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.85 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.926 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 122.014 sec

Iteration 23:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=orderMatrix[1][0]) if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]>=orderMatrix[1][1]) if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][3]==orderMatrix[0][2]) if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][0]<floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]>=orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 62
# constraints: 153

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 561.564 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.523 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.554 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 106.566 sec

Iteration 24:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[1][0]) if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[0][2]>=motorDir) if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=orderMatrix[0][0]) if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]>=orderMatrix[1][0]) if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(1==orderMatrix[2][2]) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]>=orderMatrix[1][1]) if(orderMatrix[0][3]>=orderMatrix[1][0]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=orderMatrix[0][0]) if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]==orderMatrix[1][0]) if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]>=orderMatrix[1][1]) if(orderMatrix[2][0]>=orderMatrix[0][0]) if(orderMatrix[2][0]>=motorDir) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 84
# constraints: 157

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 551.589 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.671 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.533 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 108.513 sec

Iteration 25:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][1]) if(orderMatrix[1][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]>=orderMatrix[1][0]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]==orderMatrix[1][0]) if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][0]>=motorDir) if(orderMatrix[0][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]>=orderMatrix[0][1]) if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 97
# constraints: 165

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 514.144 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.547 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.371 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 160.83 sec

Iteration 26:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]>=5) if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]>=orderMatrix[1][0]) if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]>=orderMatrix[1][0]) if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(1==orderMatrix[2][2]) if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]>=orderMatrix[1][1]) if(orderMatrix[0][3]>=orderMatrix[1][0]) if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]==orderMatrix[1][0]) if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]>=motorDir) if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][1]>=orderMatrix[1][1]) if(orderMatrix[1][3]>=motorDir) if(orderMatrix[1][3]>=orderMatrix[1][1]) if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]>=orderMatrix[1][1]) if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][0]>=motorDir) if(orderMatrix[0][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][1]>=motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 101
# constraints: 170

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 610.103 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.661 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.515 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 164.391 sec

Iteration 27:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][0]<(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[2][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]>=motorDir) if(orderMatrix[1][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 94
# constraints: 173

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 660.419 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.591 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.413 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 170.937 sec

Iteration 28:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum>=orderMatrix[0][0]) if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(motorDir>=0) if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=orderMatrix[0][0]) if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]>=orderMatrix[0][0]) if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(1==orderMatrix[2][2]) if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]>=orderMatrix[0][0]) if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(motorDir>=orderMatrix[1][1]) if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]>=orderMatrix[0][0]) if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir>=orderMatrix[2][1]) if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=orderMatrix[0][0]) if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(motorDir>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 90
# constraints: 180

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 601.031 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.752 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.656 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 179.248 sec

Iteration 29:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]>=orderMatrix[1][0]) if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][2]) if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=orderMatrix[1][0]) if(floorNum>=orderMatrix[0][0]) if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]>=orderMatrix[0][0]) if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]==orderMatrix[1][0]) if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 82
# constraints: 187

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 491.591 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.469 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.328 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 162.684 sec

Iteration 30:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]>=3) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][1]) if(orderMatrix[1][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][1]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][3]>=orderMatrix[2][1]) if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][1]) if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]>=orderMatrix[2][1]) if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[1][1]>=orderMatrix[2][1]) if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][2]) if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]>=orderMatrix[2][1]) if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][0]>=orderMatrix[2][1]) if(orderMatrix[1][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(motorDir==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 85
# constraints: 193

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 673.535 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.773 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.829 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 142.222 sec

Iteration 31:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=orderMatrix[0][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) if(orderMatrix[0][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum>=orderMatrix[0][0]) if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(motorDir>=0) if(orderMatrix[2][2]>=orderMatrix[0][0]) if(orderMatrix[0][3]>=orderMatrix[0][0]) if(orderMatrix[0][3]>=orderMatrix[0][1]) if(orderMatrix[1][0]>=orderMatrix[0][1]) if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]==orderMatrix[0][2]) if(orderMatrix[2][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]>=orderMatrix[0][0]) if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]>=orderMatrix[0][0]) if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir>=orderMatrix[1][1]) if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(motorDir>=orderMatrix[2][1]) if(motorDir>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum>=orderMatrix[0][2]) if(orderMatrix[1][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 86
# constraints: 201

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 600.572 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.579 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.491 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 205.135 sec

Iteration 32:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(motorDir>=orderMatrix[1][1]) if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]>=orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[2][1]) if(2==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][1]>=floorNum) if(orderMatrix[2][1]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]>=floorNum) if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][1]>=orderMatrix[1][1]) if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(1==orderMatrix[2][1]) if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]>=floorNum) if(orderMatrix[1][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 100
# constraints: 206

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 705.776 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.663 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.635 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 160.73 sec

Iteration 33:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=motorDir) if(1==orderMatrix[0][2]) if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][0]>=orderMatrix[0][1]) if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]==orderMatrix[1][0]) if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]>=motorDir) if(1==orderMatrix[2][0]) if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 81
# constraints: 213

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 755.563 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.666 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.716 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 242.617 sec

Iteration 34:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]>=orderMatrix[0][1]) if(floorNum<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(floorNum<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]>=orderMatrix[0][1]) if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=motorDir) if(1==orderMatrix[2][2]) if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]>=motorDir) if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][0]>=motorDir) if(orderMatrix[1][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[1][3]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][3]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 98
# constraints: 221

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 716.498 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.548 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.355 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 175.348 sec

Iteration 35:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][1]>=5) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]>=orderMatrix[1][1]) if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]>=motorDir) if(1==orderMatrix[0][2]) if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]>=orderMatrix[1][0]) if(orderMatrix[2][2]>=motorDir) if(1==orderMatrix[2][2]) if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]==orderMatrix[1][0]) if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][3]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][0]>=orderMatrix[1][1]) if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][0]>=motorDir) if(orderMatrix[2][0]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = motorDir; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 84
# constraints: 227

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 725.366 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.763 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.856 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 258.69 sec

Iteration 36:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(motorDir>=orderMatrix[1][1]) if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir<orderMatrix[2][1]) if(2==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][1]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][1]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][1]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][1]>=floorNum) if(orderMatrix[0][1]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][3]<floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[1][0]>=floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 96
# constraints: 235

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 686.976 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.69 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.617 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 241.621 sec

Iteration 37:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][2]>=orderMatrix[2][0]) if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]>=orderMatrix[2][0]) if(orderMatrix[0][3]>=orderMatrix[2][0]) if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(0>=floorNum) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]>=orderMatrix[2][1]) if(orderMatrix[0][3]>=orderMatrix[1][3]) if(orderMatrix[0][2]>=orderMatrix[1][3]) if(orderMatrix[0][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]>=orderMatrix[2][1]) if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][2]) if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][1]>=orderMatrix[2][1]) if(orderMatrix[1][1]>=orderMatrix[2][1]) if(orderMatrix[1][0]>=orderMatrix[2][1]) if(orderMatrix[1][0]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][0]>=orderMatrix[1][3]) if(orderMatrix[1][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=orderMatrix[1][3]) if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][1]) if(orderMatrix[1][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[1][2]>=orderMatrix[2][0]) if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[1][2]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[1][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][3]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[2][3]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][3]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][1]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = floorNum; else __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 97
# constraints: 240

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 664.937 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 310): 2.443 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 3.308 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 266.665 sec

Iteration 38:
signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(2==orderMatrix[0][3]) if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][3]<(-1)) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = 0; else if(floorNum>=3) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][2]>=orderMatrix[0][1]) if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[0][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[0][2]<orderMatrix[1][3]) if(orderMatrix[2][1]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][2]<motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[0][2]<orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][2]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(floorNum<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(orderMatrix[2][2]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[2][2]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[2][2]<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(orderMatrix[2][2]<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][2]>=motorDir) if(1==orderMatrix[2][2]) if(motorDir<orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(motorDir<orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][2]; else if(motorDir<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; else __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]<orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(orderMatrix[0][3]<orderMatrix[2][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][3]; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(floorNum<orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(floorNum<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]>=orderMatrix[1][1]) if(orderMatrix[1][0]<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]<orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if(orderMatrix[1][0]<orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][0]>=motorDir) if(orderMatrix[1][1]<motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][1]<orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else __iv__return_expr_floorIsOrdered = motorDir; else __iv__return_expr_floorIsOrdered = orderMatrix[0][2]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 78
# constraints: 246

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(2==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(5==orderMatrix[1][1]) __iv__return_expr_isButtonPressed = 0; else if(2==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(4==orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(5==orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(4==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[1][2]>=2) if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(orderMatrix[0][0]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(orderMatrix[2][1]<orderMatrix[0][0]) if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else __iv__return_expr_isButtonPressed = 0; else if(orderMatrix[1][3]>=2) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[0][1]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][2]<orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(5<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = 0; else if(5<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(orderMatrix[2][2]<(-1)) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[2][2]) __iv__return_expr_isButtonPressed = orderMatrix[2][2]; else if(orderMatrix[1][2]>=orderMatrix[2][3]) if(orderMatrix[2][1]<orderMatrix[0][1]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][3]<orderMatrix[1][1]) __iv__return_expr_isButtonPressed = orderMatrix[1][1]; else if((-1)>=orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else if(orderMatrix[0][2]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[0][2]<orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(orderMatrix[2][3]==orderMatrix[1][2]) if(orderMatrix[2][0]<orderMatrix[1][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else if(orderMatrix[2][2]>=5) __iv__return_expr_isButtonPressed = orderMatrix[0][1]; else __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = orderMatrix[2][3]; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 30
# constraints: 65

signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 784.529 sec

verification results: 
property 'assert((state != 2));' is TRUE alarm.

total CBMC running time: 22232.55 sec
total true alarm finding time: 136.268 sec
total refinement time: 4122.692 sec
peak memory usage: 8463.96 MB