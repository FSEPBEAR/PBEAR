--src data/elev/src/p2/elev.c --wd results/elevator/p2/acc --unwind 1000 --object-bits 14 --synth-only-acc --synth-dir results/elevator/acc/synth --synth-timeout 600 --synth-max-size 512 --synth-max-height 15 
code parsing time: 0.794 sec

select target function calls:
elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49) influences 5 external nodes
internal node ratio: 0.85% (6 of 709)

floorIsOrdered(previousMainFloor, motorDirection) (call id 20) influences 13 external nodes
internal node ratio: 19.32% (137 of 709)

isButtonPressed() (call id 11) influences 7 external nodes
internal node ratio: 2.96% (21 of 709)

floorIsOrdered(previousMainFloor, motorDirection) (call id 14) influences 13 external nodes
internal node ratio: 12.69% (90 of 709)

find the best target combination:
predict complexity: (unwind 1000)
criterion unwind: 8
elev_get_button_signal((elev_button_type_t)(button), floorNum): original cmplx: 1, stub cmplx: 0
floorIsOrdered(previousMainFloor, motorDirection): original cmplx: 157, stub cmplx: 22
isButtonPressed(): original cmplx: 136, stub cmplx: 9
total cmplx: 8198

Jul 22, 2023 7:01:05 AM iv_checker.select.TargetFunctionSelector printRank
INFO: 
1. elev_get_button_signal((elev_button_type_t)(button), floorNum); floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed(); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 2.966
2. elev_get_button_signal((elev_button_type_t)(button), floorNum); floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 2.330
3. floorIsOrdered(previousMainFloor, motorDirection); isButtonPressed(); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 1.909
4. elev_get_button_signal((elev_button_type_t)(button), floorNum); isButtonPressed();  fitness: 1.635
5. floorIsOrdered(previousMainFloor, motorDirection); floorIsOrdered(previousMainFloor, motorDirection);  fitness: 1.038

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 10, timeout: 86400 sec)
cbmc running time: 1.88 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1.88 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 142.35 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 20, timeout: 86400 sec)
cbmc running time: 4.28 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6.16 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 289.85 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 30, timeout: 86400 sec)
cbmc running time: 7.911 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 14.071 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 459.78 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 40, timeout: 86400 sec)
cbmc running time: 11.135 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 25.206 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 619.59 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 50, timeout: 86400 sec)
cbmc running time: 14.501 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 39.707 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 776.98 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 60, timeout: 86400 sec)
cbmc running time: 17.195 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 56.902 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 939.00 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 70, timeout: 86400 sec)
cbmc running time: 20.184 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 77.086 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1103.55 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 80, timeout: 86400 sec)
cbmc running time: 24.39 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 101.476 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1284.04 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 90, timeout: 86400 sec)
cbmc running time: 24.637 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 126.113 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1517.01 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 100, timeout: 86400 sec)
cbmc running time: 31.303 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 157.416 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1582.98 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 110, timeout: 86400 sec)
cbmc running time: 39.086 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 196.502 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1812.70 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 120, timeout: 86400 sec)
cbmc running time: 40.431 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 236.933 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 1967.75 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 130, timeout: 86400 sec)
cbmc running time: 41.683 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 278.616 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2178.67 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 140, timeout: 86400 sec)
cbmc running time: 39.59 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 318.206 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2355.69 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 150, timeout: 86400 sec)
cbmc running time: 48.427 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 366.633 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2409.00 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 160, timeout: 86400 sec)
cbmc running time: 60.006 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 426.639 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2667.09 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 170, timeout: 86400 sec)
cbmc running time: 68.557 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 495.196 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 2696.66 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 180, timeout: 86400 sec)
cbmc running time: 58.518 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 553.714 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3014.54 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 190, timeout: 86400 sec)
cbmc running time: 70.62 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 624.334 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3092.89 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 200, timeout: 86400 sec)
cbmc running time: 72.214 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 696.548 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3186.06 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 210, timeout: 86400 sec)
cbmc running time: 66.758 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 763.306 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3535.91 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 220, timeout: 86400 sec)
cbmc running time: 78.873 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 842.179 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3697.88 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 230, timeout: 86400 sec)
cbmc running time: 82.686 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 924.865 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3837.74 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 240, timeout: 86400 sec)
cbmc running time: 86.775 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1011.64 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 3877.09 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 250, timeout: 86400 sec)
cbmc running time: 94.11 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1105.75 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4158.01 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 260, timeout: 86400 sec)
cbmc running time: 95.51 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1201.26 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4402.29 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 270, timeout: 86400 sec)
cbmc running time: 99.209 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1300.469 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4442.83 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 280, timeout: 86400 sec)
cbmc running time: 125.881 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1426.35 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4819.27 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 290, timeout: 86400 sec)
cbmc running time: 108.273 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1534.623 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 4946.12 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 300, timeout: 86400 sec)
cbmc running time: 109.099 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1643.722 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5097.04 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 310, timeout: 86400 sec)
cbmc running time: 123.545 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1767.267 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5193.64 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 320, timeout: 86400 sec)
cbmc running time: 115.059 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 1882.326 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5439.89 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 330, timeout: 86400 sec)
cbmc running time: 130.119 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2012.445 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5605.09 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 340, timeout: 86400 sec)
cbmc running time: 146.205 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2158.65 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5605.09 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 350, timeout: 86400 sec)
cbmc running time: 139.496 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2298.146 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 5919.54 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 360, timeout: 86400 sec)
cbmc running time: 174.707 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2472.853 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6128.16 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 370, timeout: 86400 sec)
cbmc running time: 129.816 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2602.669 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6189.29 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 380, timeout: 86400 sec)
cbmc running time: 208.713 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2811.382 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6452.40 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 390, timeout: 86400 sec)
cbmc running time: 180.04 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 2991.422 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6622.32 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 400, timeout: 86400 sec)
cbmc running time: 195.171 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3186.593 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6794.10 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 410, timeout: 86400 sec)
cbmc running time: 180.141 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3366.734 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 6950.48 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 420, timeout: 86400 sec)
cbmc running time: 252.292 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3619.026 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7209.29 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 430, timeout: 86400 sec)
cbmc running time: 191.056 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 3810.082 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7389.39 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 440, timeout: 86400 sec)
cbmc running time: 205.13 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4015.212 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7474.83 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 450, timeout: 86400 sec)
cbmc running time: 219.587 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4234.799 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7708.73 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 460, timeout: 86400 sec)
cbmc running time: 250.979 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4485.778 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 7888.18 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 470, timeout: 86400 sec)
cbmc running time: 231.741 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4717.519 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8051.75 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 480, timeout: 86400 sec)
cbmc running time: 261.337 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 4978.856 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8211.68 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 490, timeout: 86400 sec)
cbmc running time: 267.936 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5246.792 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8396.12 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 500, timeout: 86400 sec)
cbmc running time: 379.14 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5625.932 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8752.87 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 510, timeout: 86400 sec)
cbmc running time: 343.667 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 5969.599 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8757.07 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 520, timeout: 86400 sec)
cbmc running time: 293.004 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6262.603 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 8923.95 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 530, timeout: 86400 sec)
cbmc running time: 281.362 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6543.965 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 9096.77 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 540, timeout: 86400 sec)
cbmc running time: 316.961 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 6860.926 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 9288.53 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 550, timeout: 86400 sec)
cbmc running time: 297.226 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 7158.152 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 9464.08 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 560, timeout: 86400 sec)
cbmc running time: 395.185 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 7553.337 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 9637.48 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 570, timeout: 86400 sec)
cbmc running time: 509.578 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 8062.915 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10571.84 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 580, timeout: 86400 sec)
cbmc running time: 442.77 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 8505.685 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10571.84 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 590, timeout: 86400 sec)
cbmc running time: 392.939 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 8898.624 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10571.84 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 600, timeout: 86400 sec)
cbmc running time: 379.859 sec

verification results: 
property 'assert((state != 2));' is not violated.

total CBMC running time: 9278.483 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec
peak memory usage: 10571.84 MB

call elev_get_button_signal((elev_button_type_t)(button), floorNum) (call id 49)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 20)
call isButtonPressed() (call id 11)
call floorIsOrdered(previousMainFloor, motorDirection) (call id 14)
Iteration 0:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]==floorNum) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[1][1]; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(motorDir>=(-1)) if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(1==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 22
accuracy: 79.53%
coverage: 100.00%
# constraints: 40

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 859.152 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 7.791 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 9.877 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 10.731 sec

Iteration 1:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[0][3]) if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][2]==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][3]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][0]; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[0][2]==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(floorNum<orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[1][2]<(-1)) if(orderMatrix[0][3]==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[0][3]==motorDir) __iv__return_expr_floorIsOrdered = motorDir; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = motorDir; else if(orderMatrix[0][3]==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if((-1)>=orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else __iv__return_expr_floorIsOrdered = 0; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 29
# constraints: 43

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(orderMatrix[2][2]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = 0; else if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = 1; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
accuracy: 93.77%
coverage: 100.00%
# constraints: 24

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 605.627 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.444 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 5.595 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 14.524 sec

Iteration 2:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 1; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(1==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if((-1)==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = orderMatrix[0][3]; else if((-1)==orderMatrix[0][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(5<orderMatrix[1][3]) if(orderMatrix[1][1]==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][2]>=5) __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = orderMatrix[1][2]; else if(1==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][2]<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(orderMatrix[1][0]>=4) __iv__return_expr_floorIsOrdered = 0; else if((-1)>=orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 28
# constraints: 46

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][1]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
# constraints: 27

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 784.169 sec

verification results: 
property 'assert((state != 2));' is FALSE alarm.
Counterexample-guided true alarm finding: 
cbmc time (unwind: 610): 4.97 sec
property 'assert((state != 2));' is FALSE alarm.
true alarm finding time: 6.061 sec


synthesize new stub refined by counterexamples (unit timeout: 300 sec)
on each refinement:
refinement time: 20.39 sec

Iteration 3:
signed int __iv__elev_get_button_signal_stub(elev_button_type_t button, signed int floor) {
	signed int __iv__return_expr_elev_get_button_signal;
	signed int __iv__nondet_input_elev_get_button_signal_1 = __VERIFIER_nondet_signed_int();
	__iv__return_expr_elev_get_button_signal = __iv__nondet_input_elev_get_button_signal_1;
	__CPROVER_assume(__iv__return_expr_elev_get_button_signal == 0 || __iv__return_expr_elev_get_button_signal == 1);
	return __iv__return_expr_elev_get_button_signal;
}
complexity: 0
accuracy: 100.00%
coverage: 100.00%
# constraints: 2

signed int __iv__floorIsOrdered_stub(signed int floorNum, signed int motorDir) {
	signed int __iv__return_expr_floorIsOrdered;
	if(3==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[1][3]; else if(4==orderMatrix[0][2]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = motorDir; else if(3==orderMatrix[1][0]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[2][2]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(3==orderMatrix[2][1]) __iv__return_expr_floorIsOrdered = 0; else if(2==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(4==orderMatrix[1][1]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if((-1)==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(5==orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(motorDir>=2) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][0]>=2) __iv__return_expr_floorIsOrdered = 1; else if(floorNum<orderMatrix[2][0]) __iv__return_expr_floorIsOrdered = orderMatrix[2][0]; else if(2==orderMatrix[0][3]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[2][1]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[0][0]; else if(orderMatrix[1][2]<(-1)) if(orderMatrix[1][3]==orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = 0; else __iv__return_expr_floorIsOrdered = 1; else if(orderMatrix[1][2]>=5) __iv__return_expr_floorIsOrdered = 0; else if((-1)==motorDir) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[1][1]>=5) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][1]<(-1)) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(5<orderMatrix[1][3]) __iv__return_expr_floorIsOrdered = 0; else if(4==orderMatrix[1][2]) __iv__return_expr_floorIsOrdered = 0; else if(orderMatrix[0][2]>=5) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else if(orderMatrix[2][1]>=orderMatrix[0][1]) __iv__return_expr_floorIsOrdered = orderMatrix[2][1]; else __iv__return_expr_floorIsOrdered = orderMatrix[0][1]; 
	__CPROVER_assume(__iv__return_expr_floorIsOrdered == 0 || __iv__return_expr_floorIsOrdered == 1);
	return __iv__return_expr_floorIsOrdered;
}
complexity: 27
# constraints: 49

signed int __iv__isButtonPressed_stub() {
	signed int __iv__return_expr_isButtonPressed;
	if(1==orderMatrix[2][3]) __iv__return_expr_isButtonPressed = orderMatrix[2][3]; else if(1==orderMatrix[0][3]) __iv__return_expr_isButtonPressed = orderMatrix[0][3]; else if(1==orderMatrix[1][0]) __iv__return_expr_isButtonPressed = orderMatrix[1][0]; else if(1==orderMatrix[2][0]) __iv__return_expr_isButtonPressed = orderMatrix[2][0]; else if(1==orderMatrix[0][0]) __iv__return_expr_isButtonPressed = orderMatrix[0][0]; else if(1==orderMatrix[1][3]) __iv__return_expr_isButtonPressed = orderMatrix[1][3]; else if(1==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[0][2]; else if(1==orderMatrix[2][1]) __iv__return_expr_isButtonPressed = orderMatrix[2][1]; else if(orderMatrix[1][1]==orderMatrix[0][2]) __iv__return_expr_isButtonPressed = orderMatrix[1][2]; else __iv__return_expr_isButtonPressed = 0; 
	__CPROVER_assume(__iv__return_expr_isButtonPressed == 0 || __iv__return_expr_isButtonPressed == 1);
	return __iv__return_expr_isButtonPressed;
}
complexity: 9
# constraints: 27

run cbmc: (unwind: 610, timeout: 86400 sec)
cbmc running time: 787.45 sec

verification results: 
property 'assert((state != 2));' is TRUE alarm.

total CBMC running time: 12314.881 sec
total true alarm finding time: 21.533 sec
total refinement time: 45.646 sec
peak memory usage: 11325.69 MB