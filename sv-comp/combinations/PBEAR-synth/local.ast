typedef unsigned char __CPROVER_bool;
typedef unsigned int __CPROVER_size_t;
typedef unsigned int size_t;
typedef unsigned int time_t;
typedef unsigned short int wchar_t;
void _iv_() {return (x - (x * x * x) / 6.0f) + (x * x * x * x * x) / 120.0f + (x * x * x * x * x * x * x) / 5040.0f;
signed int return_value___VERIFIER_nondet_int;
return_value___VERIFIER_nondet_int = __VERIFIER_nondet_signed_int();
!(return_value___VERIFIER_nondet_int != 0);
__iv__current_func_call = 1;
main1();
__iv__current_func_call = 2;
main2();
return __VERIFIER_nondet_signed_int();
signed char t;
!((signed int)a < 0);
a = (signed char)-((signed int)a);
!((signed int)b < 0);
b = (signed char)-((signed int)b);
!((signed int)b != 0);
t = b;
b = (signed char)((signed int)a % (signed int)b);
a = t;
__CPROVER_assume(FALSE);
return a;
signed char x;
x = __VERIFIER_nondet_signed_char();
signed char y;
y = __VERIFIER_nondet_signed_char();
signed char g;
!((signed int)y > 0 && (signed int)x % (signed int)y == 0);
__iv__current_func_call = 12;
g=gcd_test(x, y);
__iv__current_func_call = 13;
__VERIFIER_assert((signed int)(g == y));
return 0;
float IN;
IN = __VERIFIER_nondet_float();
__iv__current_func_call = 5;
assume_abort_if_not((signed int)(IN > -1.2f && IN < 1.2f));
float x;
float return_value_f;
__iv__current_func_call = 6;
return_value_f=f(IN);
float return_value_fp;
__iv__current_func_call = 7;
return_value_fp=fp(IN);
x = IN - return_value_f / return_value_fp;
(double)x < 0.1;
__iv__current_func_call = 8;
reach_error();
return 0;
assert(0 != 0);
return ((float)1 - (x * x) / 2.0f) + (x * x * x * x) / 24.0f + (x * x * x * x * x * x) / 720.0f;
cond != 0;
__iv__current_func_call = 15;
reach_error();
abort();
cond != 0;
abort();

}