outputs: __iv__return_expr_gcd_test 
logs: 
{"Func":"gcd_test","Input":[{"Var":"a","Val":-83},{"Var":"b","Val":-83}],"Output":[{"Var":"__iv__return_expr_gcd_test","Val":83}],"InitOutput":[],}
{"Func":"gcd_test","Input":[{"Var":"a","Val":49},{"Var":"b","Val":-49}],"Output":[{"Var":"__iv__return_expr_gcd_test","Val":49}],"InitOutput":[],}
{"Func":"gcd_test","Input":[{"Var":"a","Val":0},{"Var":"b","Val":0}],"Output":[{"Var":"__iv__return_expr_gcd_test","Val":0}],"InitOutput":[],}
{"Func":"gcd_test","Input":[{"Var":"a","Val":-102},{"Var":"b","Val":-68}],"Output":[{"Var":"__iv__return_expr_gcd_test","Val":34}],"InitOutput":[],}
{"Func":"gcd_test","Input":[{"Var":"a","Val":72},{"Var":"b","Val":96}],"Output":[{"Var":"__iv__return_expr_gcd_test","Val":24}],"InitOutput":[],}
{"Func":"gcd_test","Input":[{"Var":"a","Val":59},{"Var":"b","Val":-128}],"Output":[{"Var":"__iv__return_expr_gcd_test","Val":-1}],"InitOutput":[],}
logs end
SyGuS code:
__iv__return_expr_gcd_test:ite >= % __iv__input_0_ 3 ) 2 ) -1 ite < __iv__input_0_ __iv__input_1_ ) - __iv__input_1_ __iv__input_0_ ) - 0 __iv__input_1_ ) ) )
SyGuS end
assumes:
__iv__return_expr_gcd_test:__iv__return_expr_gcd_test == -128 || (-63 <= __iv__return_expr_gcd_test && __iv__return_expr_gcd_test <= 127)
assumes end:
signed char __iv__return_expr_gcd_test;
if((a%3)>=2) __iv__return_expr_gcd_test = (-1); else if(a<b) __iv__return_expr_gcd_test = (b-a); else __iv__return_expr_gcd_test = (0-b); 
__CPROVER_assume(__iv__return_expr_gcd_test == -128 || (-63 <= __iv__return_expr_gcd_test && __iv__return_expr_gcd_test <= 127));
return __iv__return_expr_gcd_test;
complexity: 2
accuracy: 3.18%
coverage: 94.34%
max_comp_size: 5
