--src data/sv-benchmarks/c/ntdrivers-simplified/floppy_simpl3.cil-1.c --wd results/ntdrivers-simplified/floppy_simpl3.cil-1.c/no_alarm --no-alarm-filtering --unwind 1000 --synth-dir results/ntdrivers-simplified/synth --synth-timeout 300 --synth-max-size 512 --synth-max-height 15 --sv-comp-mode 
code parsing time: 0.846 sec

select target function calls:
ObReferenceObjectByHandle(threadHandle, 1048576, 0, KernelMode, DisketteExtension__FloppyThread, 0) (call id 96) is independent call
internal node ratio: 0.00% (0 of 1198)

IoQueryDeviceDescription(fdcInfo__BusType, fdcInfo__BusNumber, Dc, fdcInfo__ControllerNumber, Fp, fdcInfo__PeripheralNumber, FlConfigCallBack, disketteExtension) (call id 48) is independent call
internal node ratio: 0.00% (0 of 1198)

ZwClose(threadHandle) (call id 97) is independent call
internal node ratio: 0.00% (0 of 1198)

IoRegisterDeviceInterface(disketteExtension__UnderlyingPDO, MOUNTDEV_MOUNTED_DEVICE_GUID, 0, disketteExtension__InterfaceString) (call id 49) is independent call
internal node ratio: 0.00% (0 of 1198)

IoSetDeviceInterfaceState(disketteExtension__InterfaceString, 1) (call id 50) is independent call
internal node ratio: 0.00% (0 of 1198)

IoSetDeviceInterfaceState(disketteExtension__InterfaceString, 0) (call id 86) is independent call
internal node ratio: 0.00% (0 of 1198)

IoBuildDeviceIoControlRequest(Ioctl, DeviceObject, 0, 0, 0, 0, 1, doneEvent, ioStatus) (call id 23) is independent call
internal node ratio: 0.00% (0 of 1198)

IoDeleteSymbolicLink(disketteExtension__ArcName) (call id 87) is independent call
internal node ratio: 0.00% (0 of 1198)

PsCreateSystemThread(threadHandle, 0, ObjAttributes, 0, 0, FloppyThread, DisketteExtension) (call id 95) is independent call
internal node ratio: 0.00% (0 of 1198)

find the best target combination:
predict complexity: (unwind 1000)
criterion unwind: 1
total cmplx: 191

Jul 26, 2023 4:06:30 PM iv_checker.select.TargetFunctionSelector printRank
INFO: 

call ObReferenceObjectByHandle(threadHandle, 1048576, 0, KernelMode, DisketteExtension__FloppyThread, 0) (call id 96)
call IoQueryDeviceDescription(fdcInfo__BusType, fdcInfo__BusNumber, Dc, fdcInfo__ControllerNumber, Fp, fdcInfo__PeripheralNumber, FlConfigCallBack, disketteExtension) (call id 48)
call ZwClose(threadHandle) (call id 97)
call IoRegisterDeviceInterface(disketteExtension__UnderlyingPDO, MOUNTDEV_MOUNTED_DEVICE_GUID, 0, disketteExtension__InterfaceString) (call id 49)
call IoSetDeviceInterfaceState(disketteExtension__InterfaceString, 1) (call id 50)
call IoSetDeviceInterfaceState(disketteExtension__InterfaceString, 0) (call id 86)
call IoBuildDeviceIoControlRequest(Ioctl, DeviceObject, 0, 0, 0, 0, 1, doneEvent, ioStatus) (call id 23)
call IoDeleteSymbolicLink(disketteExtension__ArcName) (call id 87)
call PsCreateSystemThread(threadHandle, 0, ObjAttributes, 0, 0, FloppyThread, DisketteExtension) (call id 95)
Iteration 0:
signed int __iv__ObReferenceObjectByHandle_stub(signed int Handle, signed int DesiredAccess, signed int ObjectType, signed int AccessMode, signed int Object, signed int HandleInformation) {
	signed int __iv__return_expr_ObReferenceObjectByHandle = __VERIFIER_nondet_signed_int();
	__CPROVER_assume(__iv__return_expr_ObReferenceObjectByHandle == -1073741823 || __iv__return_expr_ObReferenceObjectByHandle == 0);
	return __iv__return_expr_ObReferenceObjectByHandle;
}

signed int __iv__IoQueryDeviceDescription_stub(signed int BusType, signed int BusNumber, signed int ControllerType, signed int ControllerNumber, signed int PeripheralType, signed int PeripheralNumber, signed int CalloutRoutine, signed int Context) {
	signed int __iv__return_expr_IoQueryDeviceDescription = __VERIFIER_nondet_signed_int();
	__CPROVER_assume(__iv__return_expr_IoQueryDeviceDescription == -1073741823 || __iv__return_expr_IoQueryDeviceDescription == 0);
	return __iv__return_expr_IoQueryDeviceDescription;
}

signed int __iv__ZwClose_stub(signed int Handle) {
	signed int __iv__return_expr_ZwClose = __VERIFIER_nondet_signed_int();
	__CPROVER_assume(__iv__return_expr_ZwClose == -1073741823 || __iv__return_expr_ZwClose == 0);
	return __iv__return_expr_ZwClose;
}

signed int __iv__IoRegisterDeviceInterface_stub(signed int PhysicalDeviceObject, signed int InterfaceClassGuid, signed int ReferenceString, signed int SymbolicLinkName) {
	signed int __iv__return_expr_IoRegisterDeviceInterface = __VERIFIER_nondet_signed_int();
	__CPROVER_assume(__iv__return_expr_IoRegisterDeviceInterface == -1073741808 || __iv__return_expr_IoRegisterDeviceInterface == 0);
	return __iv__return_expr_IoRegisterDeviceInterface;
}

signed int __iv__IoSetDeviceInterfaceState_stub(signed int SymbolicLinkName, signed int Enable) {
	signed int __iv__return_expr_IoSetDeviceInterfaceState = __VERIFIER_nondet_signed_int();
	__CPROVER_assume(__iv__return_expr_IoSetDeviceInterfaceState == -1073741823 || __iv__return_expr_IoSetDeviceInterfaceState == 0);
	return __iv__return_expr_IoSetDeviceInterfaceState;
}

signed int __iv__IoBuildDeviceIoControlRequest_stub(signed int IoControlCode, signed int DeviceObject, signed int InputBuffer, signed int InputBufferLength, signed int OutputBuffer, signed int OutputBufferLength, signed int InternalDeviceIoControl, signed int Event, signed int IoStatusBlock) {
	customIrp = __VERIFIER_nondet_signed_int();
	__CPROVER_assume(customIrp == 1);
	signed int __iv__return_expr_IoBuildDeviceIoControlRequest = __VERIFIER_nondet_signed_int();
	return __iv__return_expr_IoBuildDeviceIoControlRequest;
}

signed int __iv__IoDeleteSymbolicLink_stub(signed int SymbolicLinkName) {
	signed int __iv__return_expr_IoDeleteSymbolicLink = __VERIFIER_nondet_signed_int();
	__CPROVER_assume(__iv__return_expr_IoDeleteSymbolicLink == -1073741823 || __iv__return_expr_IoDeleteSymbolicLink == 0);
	return __iv__return_expr_IoDeleteSymbolicLink;
}

signed int __iv__PsCreateSystemThread_stub(signed int ThreadHandle, signed int DesiredAccess, signed int ObjectAttributes, signed int ProcessHandle, signed int ClientId, signed int StartRoutine, signed int StartContext) {
	signed int __iv__return_expr_PsCreateSystemThread = __VERIFIER_nondet_signed_int();
	__CPROVER_assume(__iv__return_expr_PsCreateSystemThread == -1073741823 || __iv__return_expr_PsCreateSystemThread == 0);
	return __iv__return_expr_PsCreateSystemThread;
}

run cbmc: (unwind: 10, timeout: 86400 sec)
cbmc running time: 0.161 sec

verification results: 
property 'assert(FALSE);' is TRUE alarm.

total CBMC running time: 0.161 sec
total true alarm finding time: 0.0 sec
total refinement time: 0.0 sec, # of refinements: 0
peak memory usage: 11.64 MB